import React from 'react';
import renderWithTheme from '../../../testUtils/renderWithTheme';

import {
  Wrapper,
  Background,
  ProgressPercentage,
  Info,
} from '../StyledProgressBar';

describe('Wrapper', () => {
  it.each`
    size        | variant
    ${'small'}  | ${'horizontal'}
    ${'medium'} | ${'horizontal'}
    ${'small'}  | ${'vertical'}
    ${'medium'} | ${'vertical'}
  `('has $size - $variant style', ({ size, variant }) => {
    const { container } = renderWithTheme(
      <Wrapper themeSize={size} themeVariant={variant} />
    );

    expect(container.firstChild).toMatchSnapshot();
  });
});

describe('Background', () => {
  it.each`
    size        | variant         | fullWidth
    ${'small'}  | ${'horizontal'} | ${true}
    ${'small'}  | ${'horizontal'} | ${false}
    ${'medium'} | ${'horizontal'} | ${true}
    ${'medium'} | ${'horizontal'} | ${false}
    ${'small'}  | ${'vertical'}   | ${false}
    ${'medium'} | ${'vertical'}   | ${false}
  `(
    'has $size - $variant style and fullWidth is $fullWidth',
    ({ size, variant, fullWidth }) => {
      const { container } = renderWithTheme(
        <Background
          themeSize={size}
          themeVariant={variant}
          themeFullWidth={fullWidth}
        />
      );

      expect(container.firstChild).toMatchSnapshot();
    }
  );
});

describe('ProgressPercentage', () => {
  it.each`
    size        | variant         | intent
    ${'small'}  | ${'horizontal'} | ${'primary'}
    ${'small'}  | ${'vertical'}   | ${'danger'}
    ${'small'}  | ${'horizontal'} | ${'success'}
    ${'small'}  | ${'vertical'}   | ${'warning'}
    ${'small'}  | ${'horizontal'} | ${'error'}
    ${'small'}  | ${'vertical'}   | ${'yellow'}
    ${'medium'} | ${'horizontal'} | ${'primary'}
    ${'medium'} | ${'vertical'}   | ${'danger'}
    ${'medium'} | ${'horizontal'} | ${'success'}
    ${'medium'} | ${'vertical'}   | ${'warning'}
    ${'medium'} | ${'horizontal'} | ${'error'}
    ${'medium'} | ${'vertical'}   | ${'yellow'}
  `('has $size - $variant and $intent style', ({ size, variant, intent }) => {
    const { container } = renderWithTheme(
      <ProgressPercentage
        themeSize={size}
        themeVariant={variant}
        themeIntent={intent}
        themeValue={32}
      />
    );

    expect(container.firstChild).toMatchSnapshot();
  });
});

describe('Info', () => {
  it.each`
    variant         | value
    ${'horizontal'} | ${32}
    ${'vertical'}   | ${32}
  `('has correct $variant style with $value value', ({ variant, value }) => {
    const { container } = renderWithTheme(
      <Info themeVariant={variant} themeValue={value} />
    );

    expect(container.firstChild).toMatchSnapshot();
  });
});
