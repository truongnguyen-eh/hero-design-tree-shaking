import React from 'react';

import userEvent from '@testing-library/user-event';
import renderWithTheme from '../../../testUtils/renderWithTheme';

import ProgressBar from '../ProgressBar';
import ProgressCircle from '../ProgressCircle';

describe('ProgressCircle', () => {
  it('allows to custom value rendering', () => {
    const { getByText } = renderWithTheme(
      <ProgressCircle
        value={50}
        valueRenderer={(value) => <span>{value * 2}</span>}
        intent="primary"
        status="active"
        withInfo
        size="small"
      />
    );

    expect(getByText('100')).toBeInTheDocument();
  });
});

describe('ProgressBar', () => {
  it('renders vertical bar', () => {
    const { getByTestId, getByText } = renderWithTheme(
      <ProgressBar value={50} variant="vertical" data-test-id="vertical-bar" />
    );

    expect(getByTestId('vertical-bar')).toHaveStyle(`height: 100%`);
    expect(getByText('50%')).toBeInTheDocument();
    expect(getByText('50%')).toHaveStyle(`position: absolute`);
  });

  it('renders horizontal bar', () => {
    const { getByTestId, getByText } = renderWithTheme(
      <ProgressBar value={50} data-test-id="horizontal-bar" />
    );

    expect(getByTestId('horizontal-bar')).toHaveStyle(`height: 20px`);
    expect(getByText('50%')).toHaveStyle(`width: 32px`);
  });

  it('renders markers', () => {
    const { getByTestId, getByText } = renderWithTheme(
      <ProgressBar
        value={50}
        data-test-id="progress-bar"
        markers={[
          { value: 20, text: 'Bad', intent: 'danger' },
          {
            value: 60,
            text: <div data-test-id="good-text">Good</div>,
            intent: 'success',
          },
          { value: 80, intent: 'success' },
        ]}
      />
    );

    expect(getByTestId('progress-bar-marker-20')).toHaveStyle(`left: 20%`);
    expect(getByTestId('progress-bar-marker-60')).toHaveStyle(`left: 60%`);
    expect(getByTestId('progress-bar-marker-80')).toHaveStyle(`left: 80%`);
    userEvent.hover(getByTestId('progress-bar-marker-20'));

    expect(getByText('Bad')).toBeVisible();

    userEvent.hover(getByTestId('progress-bar-marker-60'));

    expect(getByTestId('good-text')).toBeVisible();
  });
});
