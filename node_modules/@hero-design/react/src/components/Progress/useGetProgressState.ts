import { useState, useEffect } from 'react';
import assert from '../../utils/assert';

import type { ProgressBarProps } from './ProgressBar';

type UseGetProgressState = Required<
  Pick<ProgressBarProps, 'value' | 'status' | 'intent'>
>;

const useGetProgressState = ({
  value,
  status,
  intent,
}: UseGetProgressState) => {
  assert(
    value >= 0 && value <= 100,
    `[Progress] value:${value} is not in range [0, 100]`
  );

  const [percentage, setPercentage] = useState(value);
  const [internalIntent, setInternalIntent] = useState(intent);

  useEffect(() => {
    setPercentage(value);

    switch (status) {
      case 'active':
        setInternalIntent(value === 100 ? 'success' : 'primary');
        break;
      case 'exception':
        setInternalIntent('danger');
        break;
      case 'custom':
        setInternalIntent(intent);
        break;
    }
  }, [value, status, intent]);

  return {
    percentage,
    internalIntent,
  } as const;
};

export default useGetProgressState;
