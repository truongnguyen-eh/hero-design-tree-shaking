import styled, { keyframes, css } from 'styled-components';

const animationDuration = '0.25s';

const StyledWrapper = styled.div<{ themeLoading: boolean }>`
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0;

  ${({ themeLoading }) => {
    switch (themeLoading) {
      case true:
        return css`
          pointer-events: none;
        `;
      case false:
        return css``;
    }
  }};
`;

const StyledInputWrapper = styled.label<{
  themeSize: 'small' | 'medium';
}>`
  position: relative;
  display: inline-block;
  margin: 0;
  padding: 0;

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          width: ${theme.__hd__.switch.sizes.smallWidth};
          height: ${theme.__hd__.switch.sizes.smallHeight};
        `;
      case 'medium':
        return css`
          width: ${theme.__hd__.switch.sizes.mediumWidth};
          height: ${theme.__hd__.switch.sizes.mediumHeight};
        `;
    }
  }};
`;

const StyledSlider = styled.span<{
  themeDisabled: boolean;
  themeSize: 'small' | 'medium';
}>`
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
  padding: 0;

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          border-radius: ${theme.__hd__.switch.radii.small};
        `;
      case 'medium':
        return css`
          border-radius: ${theme.__hd__.switch.radii.medium};
        `;
    }
  }};

  ${({ themeDisabled, theme }) => {
    switch (themeDisabled) {
      case true:
        return css`
          cursor: not-allowed;
          background-color: ${theme.__hd__.switch.colors.disabledBackground};
        `;
      case false:
        return css`
          cursor: pointer;
          background-color: ${theme.__hd__.switch.colors.background};
        `;
    }
  }};

  &:before {
    position: absolute;
    content: '';
    background-color: ${({ theme }) =>
      theme.__hd__.switch.colors.handleBackgroundColor};
    transition: ${animationDuration};
    border-radius: 50%;
    right: auto;

    ${({ themeSize, theme }) => {
      switch (themeSize) {
        case 'small':
          return css`
            width: ${theme.__hd__.switch.sizes.sliderSmall};
            height: ${theme.__hd__.switch.sizes.sliderSmall};
            top: ${theme.__hd__.switch.space.sliderSmallTop};
            left: ${theme.__hd__.switch.space.sliderSmallLeft};
          `;
        case 'medium':
          return css`
            width: ${theme.__hd__.switch.sizes.sliderMedium};
            height: ${theme.__hd__.switch.sizes.sliderMedium};
            top: ${theme.__hd__.switch.space.sliderMediumTop};
            left: ${theme.__hd__.switch.space.sliderMediumLeft};
          `;
      }
    }};
  }
`;

const getIconPositionStyle = (
  {
    themeChecked,
    themeDisabled,
  }: { themeChecked: boolean; themeDisabled: boolean },
  value: string
) =>
  themeDisabled === true && themeChecked === false
    ? css`
        right: ${value};
      `
    : css`
        left: ${value};
      `;

const DISABLED_ICON_SIZE_MAP = {
  small: 'disabledIconSmall',
  medium: 'disabledIconMedium',
} as const;

const StyledIconWrapper = styled.div<{
  themeChecked?: boolean;
  themeDisabled: boolean;
  themeSize: 'small' | 'medium';
}>`
  position: absolute;
  color: ${({ theme }) => theme.__hd__.switch.colors.iconColor};
  margin: 0;
  padding: 0;

  ${({ themeSize, themeChecked = false, themeDisabled, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          top: 0;
          ${getIconPositionStyle(
            { themeChecked, themeDisabled },
            theme.__hd__.switch.space.iconSmallLeft
          )}
          line-height: ${theme.__hd__.switch.fontSizes.iconSmall};
          margin-left: ${theme.__hd__.switch.space.iconSmallMarginLeft};
          height: ${theme.__hd__.switch.sizes.smallHeight};
          font-size: ${theme.__hd__.switch.fontSizes.iconSmall};
        `;
      case 'medium':
        return css`
          top: 0;
          ${getIconPositionStyle(
            { themeChecked, themeDisabled },
            theme.__hd__.switch.space.iconMediumLeft
          )}
          line-height: ${theme.__hd__.switch.fontSizes.iconMedium};
          margin-left: ${theme.__hd__.switch.space.iconMediumMarginLeft};
          height: ${theme.__hd__.switch.sizes.mediumHeight};
          font-size: ${theme.__hd__.switch.fontSizes.iconMedium};
        `;
    }
  }};

  ${({ themeDisabled, themeSize, theme }) => {
    switch (themeDisabled) {
      case true:
        return css`
          cursor: not-allowed;
          font-size: ${theme.__hd__.switch.fontSizes[
            DISABLED_ICON_SIZE_MAP[themeSize]
          ]};
        `;
      case false:
        return css`
          cursor: pointer;
        `;
    }
  }};
`;

const StyledLoadingIconWrapper = styled.div<{
  themeDisabled: boolean;
  themeSize: 'small' | 'medium';
}>`
  position: absolute;
  transition: ${animationDuration};
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  padding: 0;

  ${({ themeDisabled, theme }) => {
    switch (themeDisabled) {
      case true:
        return css`
          color: ${theme.__hd__.switch.colors.disabledLoadingIconColor};
          cursor: not-allowed;
        `;
      case false:
        return css`
          color: ${theme.__hd__.switch.colors.loadingIconColor};
          cursor: pointer;
        `;
    }
  }};

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          top: ${theme.__hd__.switch.space.sliderSmallTop};
          font-size: ${theme.__hd__.switch.fontSizes.loadingIconSmall};
          height: ${theme.__hd__.switch.sizes.sliderSmall};
          width: ${theme.__hd__.switch.sizes.sliderSmall};
        `;
      case 'medium':
        return css`
          top: ${theme.__hd__.switch.space.sliderMediumTop};
          font-size: ${theme.__hd__.switch.fontSizes.loadingIconMedium};
          height: ${theme.__hd__.switch.sizes.sliderMedium};
          width: ${theme.__hd__.switch.sizes.sliderMedium};
        `;
    }
  }};
`;

const fadeIn = keyframes`
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
`;

const StyledInput = styled.input<{
  themeDisabled: boolean;
  themeSize: 'small' | 'medium';
}>`
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;

  ${({ themeDisabled, theme }) => {
    switch (themeDisabled) {
      case true:
        return css`
          &:checked ~ ${StyledSlider} {
            background-color: ${theme.__hd__.switch.colors
              .checkedDisabledBackground};
          }

          &:checked ~ ${StyledLoadingIconWrapper} {
            color: ${theme.__hd__.switch.colors
              .checkedDisabledLoadingIconColor};
          }
        `;
      case false:
        return css`
          &:checked ~ ${StyledSlider} {
            background-color: ${theme.__hd__.switch.colors.checkedBackground};
          }

          &:checked ~ ${StyledLoadingIconWrapper} {
            color: ${theme.__hd__.switch.colors.checkedLoadingIconColor};
          }
        `;
    }
  }};

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          &:checked ~ ${StyledSlider}:before {
            left: ${theme.__hd__.switch.space.sliderSmallCheckedLeft};
          }
          ~ ${StyledLoadingIconWrapper} {
            left: ${theme.__hd__.switch.space.loadingIconSmallLeft};
          }
          &:checked ~ ${StyledLoadingIconWrapper} {
            left: ${theme.__hd__.switch.space.sliderSmallCheckedLeft};
          }
        `;
      case 'medium':
        return css`
          &:checked ~ ${StyledSlider}:before {
            left: ${theme.__hd__.switch.space.sliderMediumCheckedLeft};
          }

          ~ ${StyledLoadingIconWrapper} {
            left: ${theme.__hd__.switch.space.loadingIconMediumLeft};
          }

          &:checked ~ ${StyledLoadingIconWrapper} {
            left: ${theme.__hd__.switch.space.sliderMediumCheckedLeft};
          }
        `;
    }
  }};

  ~ ${StyledIconWrapper} {
    display: none;
  }

  &:checked ~ ${StyledIconWrapper}, &:disabled ~ ${StyledIconWrapper} {
    display: flex;
    align-items: center;
    animation-name: ${fadeIn};
    animation-duration: ${animationDuration};
  }
`;

export {
  StyledWrapper,
  StyledInputWrapper,
  StyledInput,
  StyledSlider,
  StyledIconWrapper,
  StyledLoadingIconWrapper,
};
