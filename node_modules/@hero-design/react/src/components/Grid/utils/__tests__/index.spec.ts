import { mapBreakpointCss } from '..';
import theme from '../../../../theme';

const formatCss = (str: string) =>
  str
    .split('\n')
    .map((s) => s.trim())
    .join('');

describe('mapBreakpointCss', () => {
  it('returns css for each breakpoint', () => {
    const array: [string, string, string, string, string] = [
      'test.1',
      'test.2',
      'test.10',
      'test.n',
      'test.n+1',
    ];
    const fn = (value: string) => `
      cssProperty: ${value};
    `;

    const expected = `
      cssProperty: test.1;

      @media (min-width: ${theme.breakpoints.small}) {
        cssProperty: test.2;
      }

      @media (min-width: ${theme.breakpoints.medium}) {
        cssProperty: test.10;
      }

      @media (min-width: ${theme.breakpoints.large}) {
        cssProperty: test.n;
      }

      @media (min-width: ${theme.breakpoints.xlarge}) {
        cssProperty: test.n+1;
      }
    `;

    expect(formatCss(mapBreakpointCss(array, fn))).toEqual(formatCss(expected));
  });
});
