import React from 'react';
import userEvent from '@testing-library/user-event';
import renderWithTheme from '../../../../../testUtils/renderWithTheme';
import BarArea from '../BarArea';

describe('Bar Area', () => {
  it('should render correctly', () => {
    const labels = ['May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Dec'];
    const { container, getByTestId } = renderWithTheme(
      <BarArea
        data={[
          { label: '07th', data: [2.2, 1, 2, 2.5, 4, 3, 4], color: 'red' },
        ]}
        height={300}
        maxValue={20}
        minValue={0}
        selectedLegends={['07th']}
        onMouseOver={jest.fn()}
        onMouseMove={jest.fn()}
        onMouseOut={jest.fn()}
        width={300}
        barConfig={{ onClick: jest.fn() }}
        yAxisConfig={{ labels }}
        data-test-id="bar-area"
        isNegative={false}
      />
    );
    expect(container).toMatchSnapshot();

    expect(getByTestId('bar-areaMay07th2.2')).toBeInTheDocument();
  });

  it('on click bar', () => {
    const labels = ['May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Dec'];

    const onClick = jest.fn();

    const { getByTestId } = renderWithTheme(
      <BarArea
        data={[
          { label: '07th', data: [2.2, 1, 2, 2.5, 4, 3, 4], color: 'red' },
        ]}
        height={300}
        maxValue={20}
        selectedLegends={['07th']}
        onMouseOver={jest.fn()}
        onMouseMove={jest.fn()}
        onMouseOut={jest.fn()}
        width={300}
        barConfig={{ onClick }}
        yAxisConfig={{ labels }}
        data-test-id="bar-area"
        isNegative={false}
        minValue={0}
      />
    );
    userEvent.click(getByTestId('bar-areaMay07th2.2'));

    expect(onClick).toBeCalledTimes(1);
  });
});
