import React from 'react';
import * as d3 from 'd3';
import renderWithTheme from '../../../../../testUtils/renderWithTheme';

import LegendGroup from '../LegendGroup';
import { chartColors } from '../../../constants';
import { getColorFromTheme } from '../../../common/colorScale';
import { theme } from '../../../../..';

describe('LegendGroup', () => {
  it('should render correctly', () => {
    const labels = ['May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Dec'];
    const legends = ['07th', '14th', '21st', '25th', '31st'];
    const colorScale = d3
      .scaleOrdinal<string>()
      .domain(labels as Iterable<string>)
      .range(
        chartColors
          .slice(0, legends.length)
          .map((c) => getColorFromTheme(c, theme))
      );

    const internalChange = jest.fn();
    const { container } = renderWithTheme(
      <LegendGroup
        colorScale={colorScale}
        legends={legends}
        selectedLegends={['07th']}
        legendConfig={{ selectable: false }}
        onChange={internalChange}
      />
    );
    expect(container).toMatchSnapshot();
  });
  it('should render circle legend', () => {
    const labels = ['May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Dec'];
    const legends = ['07th', '14th', '21st', '25th', '31st'];
    const colorScale = d3
      .scaleOrdinal<string>()
      .domain(labels as Iterable<string>)
      .range(
        chartColors
          .slice(0, legends.length)
          .map((c) => getColorFromTheme(c, theme))
      );

    const internalChange = jest.fn();
    const { container, getByTestId } = renderWithTheme(
      <LegendGroup
        colorScale={colorScale}
        legends={legends}
        selectedLegends={['07th']}
        legendConfig={{ selectable: false }}
        onChange={internalChange}
      />
    );
    expect(container).toMatchSnapshot();
    expect(getByTestId('legend-prefix-07th-circle')).toBeInTheDocument();
  });

  it('should render checkbox legend', () => {
    const labels = ['May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Dec'];
    const legends = ['07th', '14th', '21st', '25th', '31st'];
    const colorScale = d3
      .scaleOrdinal<string>()
      .domain(labels as Iterable<string>)
      .range(
        chartColors
          .slice(0, legends.length)
          .map((c) => getColorFromTheme(c, theme))
      );

    const internalChange = jest.fn();
    const { getByTestId } = renderWithTheme(
      <LegendGroup
        colorScale={colorScale}
        legends={legends}
        selectedLegends={['07th']}
        legendConfig={{ selectable: true }}
        onChange={internalChange}
      />
    );

    expect(getByTestId('legend-prefix-07th-checkbox')).toBeInTheDocument();
  });
});
