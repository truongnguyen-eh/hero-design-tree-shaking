import React from 'react';
import {
  StyledNavigateButton,
  StyledNavigateButtonWrapper,
} from '../StyledHorizontalBarChart';
import { NavigationConfig, YAxisConfig } from '../../type';
import { CommonProps } from '../../../common';

interface NavigationProps extends CommonProps {
  height: number;
  yAxisTitleWidth: number;
  yAxisConfig?: Omit<YAxisConfig, 'maxValue'>;
  navigationConfig?: NavigationConfig;
  disabledButtons?: NavigationConfig['disabledButtons'];
}

const Navigation = ({
  yAxisConfig,
  navigationConfig,
  height,
  yAxisTitleWidth,
  'data-test-id': dataTestId,
  disabledButtons,
}: NavigationProps) => {
  return (
    <>
      <StyledNavigateButtonWrapper
        themeIsHasTitle={!!yAxisConfig?.title}
        themeTop={height / 2}
        themePosition="left"
        themeLeft={yAxisTitleWidth}
      >
        <StyledNavigateButton
          size="large"
          icon="single-left-arrow"
          intent="text"
          onClick={() => navigationConfig?.onNavigate?.('prev')}
          data-test-id={
            dataTestId ? `${dataTestId}-navigate-button-prev` : undefined
          }
          disabled={disabledButtons === 'prev'}
        />
      </StyledNavigateButtonWrapper>
      <StyledNavigateButtonWrapper
        themeIsHasTitle={!!yAxisConfig?.title}
        themeTop={height / 2}
        themePosition="right"
      >
        <StyledNavigateButton
          size="large"
          icon="single-right-arrow"
          intent="text"
          onClick={() => navigationConfig?.onNavigate?.('next')}
          data-test-id={
            dataTestId ? `${dataTestId}-navigate-button-next` : undefined
          }
          disabled={disabledButtons === 'next'}
        />
      </StyledNavigateButtonWrapper>
    </>
  );
};

export default Navigation;
