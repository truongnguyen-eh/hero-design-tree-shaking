import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';
import { debounce } from '../../../utils/debounce';
import Typography from '../../Typography';
import { ElementSize } from './types';
import { StyledYAxisTitleWrapper } from './StyledLineChart';

type YAxisTitleProps = {
  title: string;
};

const YAxisTitle = ({ title }: YAxisTitleProps) => {
  const ref = useRef<HTMLDivElement>(null);
  const [yAxisTitleSize, setYAxisTitleSize] = useState<ElementSize>({
    width: 0,
    height: 0,
  });

  const resizeHandler = useCallback(
    debounce(() => {
      if (ref.current) {
        const { width, height } = ref.current.getBoundingClientRect();
        setYAxisTitleSize({ width, height });
      }
    }, 30),
    []
  );

  useLayoutEffect(() => {
    resizeHandler();
    window.addEventListener('resize', resizeHandler);

    return () => {
      window.removeEventListener('resize', resizeHandler);
    };
  }, [resizeHandler]);

  return (
    <StyledYAxisTitleWrapper ref={ref}>
      <div>
        <Typography.Text
          fontSize={12}
          fontWeight="regular"
          intent="subdued"
          style={{
            position: 'absolute',
            transform: `rotate(-90deg)`,
            top: yAxisTitleSize.height,
            transformOrigin: '0 0',
            width: yAxisTitleSize.height,
            textAlign: 'center',
          }}
        >
          {title}
        </Typography.Text>
      </div>
    </StyledYAxisTitleWrapper>
  );
};

export default YAxisTitle;
