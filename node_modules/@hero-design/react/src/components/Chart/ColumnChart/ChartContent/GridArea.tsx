import React, { memo, useMemo } from 'react';
import * as d3 from 'd3';
import { useTheme } from 'styled-components';
import { CommonProps } from '../../../common';

interface GridAreaProps extends CommonProps {
  width: number;
  height: number;
  maxValue: number;
  minValue: number;
  highlightMiddleLine?: boolean;
  tickInterval?: number;
}

const GridArea = ({
  maxValue,
  minValue,
  width,
  height,
  highlightMiddleLine,
  tickInterval,
  'data-test-id': dataTestId,
}: GridAreaProps) => {
  const theme = useTheme();

  const {
    __hd__: { barChart: barChartTheme },
  } = theme;

  const { gridLineBackgroundColor } = barChartTheme.colors;

  // Y axis
  const yScale = useMemo(() => {
    return d3.scaleLinear().domain([minValue, maxValue]).range([height, 0]);
  }, [height, maxValue, minValue]);

  const grid =
    tickInterval &&
    d3.range(0, (maxValue || 0) + 1, tickInterval).map((value) => (
      <g key={value} data-test-id={dataTestId}>
        <line
          strokeDasharray={highlightMiddleLine && value === 0 ? undefined : 7}
          x1={0}
          x2={width}
          y1={yScale(value)}
          y2={yScale(value)}
          stroke={gridLineBackgroundColor}
          opacity={highlightMiddleLine && value === 0 ? 0.6 : 0.3}
        />
      </g>
    ));

  return <g>{grid}</g>;
};

export default memo(GridArea);
