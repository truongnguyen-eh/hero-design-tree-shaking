import React from 'react';
import userEvent from '@testing-library/user-event';
import renderWithTheme from '../../../../../testUtils/renderWithTheme';

import Navigation from '../Navigation';

describe('Navigation', () => {
  it('should render correctly', () => {
    const { container, getByTestId } = renderWithTheme(
      <Navigation
        top={300}
        left={200}
        onClickNavigation={jest.fn()}
        data-test-id="navigation"
      />
    );
    expect(container).toMatchSnapshot();
    expect(getByTestId('navigation-navigate-button-prev')).toBeInTheDocument();
    expect(getByTestId('navigation-navigate-button-next')).toBeInTheDocument();
  });

  it('should on click navigation', () => {
    const onNavigate = jest.fn();

    const { getByTestId } = renderWithTheme(
      <Navigation
        top={300}
        left={200}
        onClickNavigation={onNavigate}
        data-test-id="navigation"
      />
    );
    userEvent.click(getByTestId('navigation-navigate-button-prev'));
    userEvent.click(getByTestId('navigation-navigate-button-next'));
    expect(onNavigate).toBeCalledTimes(2);
  });

  it('disable prev navigation button', () => {
    const onClickNavigation = jest.fn();
    const { getByTestId, queryByTestId } = renderWithTheme(
      <Navigation
        top={300}
        left={200}
        onClickNavigation={onClickNavigation}
        data-test-id="navigation"
        disabledButtons="prev"
      />
    );

    const disabledButton = queryByTestId('navigation-navigate-button-prev');

    expect(disabledButton).toBeVisible();
    expect(disabledButton).toBeDisabled();

    userEvent.click(disabledButton!);

    expect(onClickNavigation).toBeCalledTimes(0);

    expect(getByTestId('navigation-navigate-button-next')).toBeVisible();
  });

  it('disable next navigation button', () => {
    const onClickNavigation = jest.fn();
    const { getByTestId, queryByTestId } = renderWithTheme(
      <Navigation
        top={300}
        left={200}
        onClickNavigation={onClickNavigation}
        data-test-id="navigation"
        disabledButtons="next"
      />
    );

    const disabledButton = queryByTestId('navigation-navigate-button-next');

    expect(disabledButton).toBeVisible();
    expect(disabledButton).toBeDisabled();

    userEvent.click(disabledButton!);
    expect(onClickNavigation).toBeCalledTimes(0);

    expect(getByTestId('navigation-navigate-button-prev')).toBeVisible();
  });
});
