import React from 'react';
import * as d3 from 'd3';
import LegendCheckboxGroup from '../../Legend/LegendCheckboxGroup';
import * as LegendGroupBase from '../../Legend/LegendGroup';
import { LegendConfig } from '../../type';
import { CommonProps } from '../../../common';

const LegendGroupBaseComponent = LegendGroupBase.default;

interface LegendGroupProps extends CommonProps {
  legendConfig?: LegendConfig;
  selectedLegends: string[];
  onChange: (selectedLegends: string[]) => void;
  legends: string[];
  colorScale: d3.ScaleOrdinal<string, string, never>;
}

const LegendGroup = ({
  legendConfig,
  'data-test-id': dataTestId,
  selectedLegends,
  onChange,
  legends,
  colorScale,
}: LegendGroupProps) => {
  if (typeof legendConfig !== 'undefined') {
    if (legendConfig.selectable) {
      return (
        <LegendCheckboxGroup
          data={legends}
          getDisplayText={(item) => item}
          getValue={(item) => item}
          getColor={(item) => colorScale(item)}
          value={selectedLegends}
          onChange={onChange}
          data-test-id={
            dataTestId ? `${dataTestId}-checkbox-legend` : undefined
          }
          {...legendConfig}
        />
      );
    }
    return (
      <LegendGroupBaseComponent
        data={legends}
        getDisplayText={(item) => item}
        getColor={(item) => colorScale(item)}
        data-test-id={dataTestId ? `${dataTestId}-legend` : undefined}
        {...legendConfig}
      />
    );
  }
  return null;
};

export default LegendGroup;
