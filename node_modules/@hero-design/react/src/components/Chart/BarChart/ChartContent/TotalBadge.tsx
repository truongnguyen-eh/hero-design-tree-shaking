import React, { memo } from 'react';
import { useTheme } from 'styled-components';
import { CommonProps } from '../../../common';
import { clamp } from '../../utils';

interface TotalBadgeProps extends CommonProps {
  total: number;
  totalFormatter?: (totalValue: number) => string;
  x: number;
  y: number;
}

const TotalBadge = ({
  total,
  totalFormatter,
  className,
  x,
  y,
  'data-test-id': dataTestId,
}: TotalBadgeProps) => {
  const theme = useTheme();

  const {
    __hd__: { barChart: barChartTheme },
  } = theme;
  const { totalSvgHeight, totalLetterWidth } = barChartTheme.sizes;

  const { totalSvgHorizontalPadding } = barChartTheme.space;

  const { totalRect } = barChartTheme.radii;

  const { totalRect: totalRectBorderWidth } = barChartTheme.borderWidth;

  const { totalText: totalTextFontSize } = barChartTheme.fontSizes;
  const { totalText: totalTextFontWeight } = barChartTheme.fontWeights;

  const { gridLineBackgroundColor, totalBackgroundColor } =
    barChartTheme.colors;

  const totalValue = totalFormatter ? totalFormatter(total) : total.toFixed(1);

  const textLength = totalValue.toString().length;

  const svgLetterWidth = clamp(
    textLength * totalLetterWidth,
    totalLetterWidth,
    textLength * totalLetterWidth
  );

  const svgWidth = svgLetterWidth + totalSvgHorizontalPadding * 2;
  return (
    <svg
      className={className}
      x={x}
      y={y}
      width={svgWidth}
      height={totalSvgHeight}
      data-test-id={dataTestId}
    >
      <rect
        x={1}
        y={1}
        width={svgWidth - totalRectBorderWidth * 2}
        height={totalSvgHeight - totalRectBorderWidth * 2}
        fill={totalBackgroundColor}
        strokeWidth={totalRectBorderWidth}
        stroke={gridLineBackgroundColor}
        rx={totalRect}
        ry={totalRect}
      />
      <text
        x="50%"
        y="50%"
        textAnchor="middle"
        alignmentBaseline="middle"
        fontSize={totalTextFontSize}
        fontWeight={totalTextFontWeight}
      >
        {totalValue}
      </text>
    </svg>
  );
};

export default memo(TotalBadge);
