import React from 'react';
import { fireEvent } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import renderWithTheme from '../../../../testUtils/renderWithTheme';
import LegendCheckboxGroup from '../LegendCheckboxGroup';

describe('LegendCheckboxGroup', () => {
  it('renders correctly', () => {
    const { getByTestId, getByText } = renderWithTheme(
      <LegendCheckboxGroup
        data={['1', '2']}
        getDisplayText={(item) => item}
        getValue={(item) => item}
        getColor={() => 'red'}
      />
    );

    expect(getByTestId('legend-prefix-1-checkbox')).toBeInTheDocument();
    expect(getByTestId('legend-prefix-2-checkbox')).toBeInTheDocument();
    expect(getByText('1')).toBeInTheDocument();
    expect(getByText('2')).toBeInTheDocument();
  });

  it('renders correctly when set maxLegend', () => {
    const { getByTestId, getByText, queryByTestId, queryByText } =
      renderWithTheme(
        <LegendCheckboxGroup
          data={['1', '2']}
          getDisplayText={(item) => item}
          getValue={(item) => item}
          getColor={() => 'red'}
          maxLegend={1}
        />
      );

    expect(getByTestId('legend-prefix-1-checkbox')).toBeInTheDocument();
    expect(queryByTestId('legend-prefix-2-checkbox')).not.toBeInTheDocument();
    expect(getByText('1')).toBeInTheDocument();
    expect(queryByText('2')).not.toBeInTheDocument();
    expect(getByText('More')).toBeInTheDocument();
  });

  it('allow to check a checkbox', () => {
    const handleChange = jest.fn();
    const { getByTestId } = renderWithTheme(
      <LegendCheckboxGroup
        data={['1', '2']}
        getDisplayText={(item) => item}
        getValue={(item) => item}
        getColor={() => 'red'}
        maxLegend={1}
        onChange={handleChange}
      />
    );

    const checkbox = getByTestId('legend-prefix-1-checkbox');

    fireEvent.click(checkbox);

    expect(handleChange).toBeCalledTimes(1);
    expect(handleChange).toBeCalledWith(['1']);
  });

  it('display view more items with vertical', () => {
    const { getByTestId } = renderWithTheme(
      <LegendCheckboxGroup
        data={['1', '2', '3', '4']}
        getDisplayText={(item) => item}
        getValue={(item) => item}
        getColor={() => 'red'}
        maxLegend={0}
        viewMoreDirection="vertical"
      />
    );

    userEvent.hover(getByTestId('legend-view-more-text'));

    expect(getByTestId('legend-view-more-wrapper')).toHaveStyle(`
    flex-direction: column;
    `);
  });
});
