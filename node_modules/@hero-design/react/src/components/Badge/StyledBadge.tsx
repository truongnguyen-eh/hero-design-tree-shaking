import styled, { css } from 'styled-components';
import type {
  FlattenInterpolation,
  ThemeProps,
  DefaultTheme,
} from 'styled-components';

export type BadgeVariant = 'filled' | 'outlined';
export type BadgeIntent =
  | 'basic'
  | 'success'
  | 'primary'
  | 'warning'
  | 'danger'
  | 'error'
  | 'archived';

export type BadgeThemeVariant = `${BadgeVariant}-${BadgeIntent}`;

const BACKGROUND_INTENTS = {
  primary: 'primaryBackground',
  success: 'successBackground',
  danger: 'dangerBackground',
  warning: 'warningBackground',
  error: 'errorBackground',
  archived: 'archivedBackground',
} as const;

const TEXT_INTENTS = {
  primary: 'primaryText',
  success: 'successText',
  danger: 'dangerText',
  warning: 'warningText',
  error: 'errorText',
  archived: 'archivedText',
} as const;

const genFilledStyles = (
  intent: Exclude<BadgeIntent, 'basic'>
): FlattenInterpolation<ThemeProps<DefaultTheme>> => css`
  background-color: ${({ theme }) => theme.__hd__.badge.colors[intent]};
  border-color: ${({ theme }) => theme.__hd__.badge.colors[intent]};
  color: ${({ theme }) => theme.__hd__.badge.colors.text};
`;

const genOutlinedStyle = (
  intent: Exclude<BadgeIntent, 'basic'>
): FlattenInterpolation<ThemeProps<DefaultTheme>> => css`
  background-color: ${({ theme }) =>
    theme.__hd__.badge.colors[BACKGROUND_INTENTS[intent]]};
  color: ${({ theme }) => theme.__hd__.badge.colors[TEXT_INTENTS[intent]]};
  border-color: ${({ theme }) =>
    theme.__hd__.badge.colors[TEXT_INTENTS[intent]]};
`;

const BadgeWrapper = styled.span`
  position: relative;
  display: inline-flex;
  margin: 0;
  padding: 0;
`;

const StyledBadge = styled.span<{
  themeVariant: BadgeThemeVariant;
  themePadding: 'narrowContent' | 'wideContent';
}>`
  display: inline-block;
  text-align: center;
  box-sizing: border-box;
  min-width: ${({ theme }) => theme.__hd__.badge.sizes.minWidth};
  height: ${({ theme }) => theme.__hd__.badge.sizes.height};
  border: ${({ theme }) => theme.__hd__.badge.borderWidths.default} solid;
  border-radius: ${({ theme }) => theme.__hd__.badge.radii.default};
  font-size: ${({ theme }) => theme.__hd__.badge.fontSizes.default};
  line-height: 1;
  font-weight: ${({ theme }) => theme.__hd__.badge.fontWeights.default};
  margin: 0;

  ${({ themeVariant, theme }) => {
    switch (themeVariant) {
      case 'filled-basic':
      case 'outlined-basic':
        return css`
          background-color: ${theme.__hd__.badge.colors.basicBackground};
          border-color: ${theme.__hd__.badge.colors.border};
          color: ${theme.__hd__.badge.colors.basicText};
        `;
      case 'filled-primary':
        return genFilledStyles('primary');
      case 'filled-success':
        return genFilledStyles('success');
      case 'filled-danger':
        return genFilledStyles('danger');
      case 'filled-warning':
        return genFilledStyles('warning');
      case 'filled-error':
        return genFilledStyles('error');
      case 'filled-archived':
        return genFilledStyles('archived');
      case 'outlined-primary':
        return genOutlinedStyle('primary');
      case 'outlined-success':
        return genOutlinedStyle('success');
      case 'outlined-danger':
        return genOutlinedStyle('danger');
      case 'outlined-warning':
        return genOutlinedStyle('warning');
      case 'outlined-error':
        return genOutlinedStyle('error');
      case 'outlined-archived':
        return genOutlinedStyle('archived');
    }
  }};

  ${({ themePadding, theme }) => {
    switch (themePadding) {
      case 'narrowContent':
        return css`
          padding: ${theme.__hd__.badge.space.narrowPadding};
        `;
      case 'wideContent':
        return css`
          padding: ${theme.__hd__.badge.space.widePadding};
        `;
    }
  }};
`;

const StatusBadge = styled.span<{
  themeIntent: 'basic' | 'success' | 'primary' | 'warning' | 'danger' | 'error';
}>`
  position: absolute;
  transform: translate(45%, -30%);
  right: ${({ theme }) => theme.__hd__.badge.space.right};
  border-radius: ${({ theme }) => theme.__hd__.badge.radii.status};
  box-shadow: ${({ theme }) => theme.__hd__.badge.shadows.default};
  padding: ${({ theme }) => theme.__hd__.badge.space.narrowPadding};
  margin: 0;

  ${({ themeIntent, theme }) => {
    switch (themeIntent) {
      case 'basic':
        return css`
          background-color: ${theme.__hd__.badge.colors.basicStatusText};
        `;
      case 'success':
        return css`
          background-color: ${theme.__hd__.badge.colors.success};
        `;
      case 'primary':
        return css`
          background-color: ${theme.__hd__.badge.colors.primary};
        `;
      case 'warning':
        return css`
          background-color: ${theme.__hd__.badge.colors.warning};
        `;
      case 'danger':
        return css`
          background-color: ${theme.__hd__.badge.colors.danger};
        `;
      case 'error':
        return css`
          background-color: ${theme.__hd__.badge.colors.error};
        `;
    }
  }};
`;

const CountNumberBadge = styled.span<{
  themeIntent: 'success' | 'primary' | 'warning' | 'danger' | 'error';
  themePadding: 'narrowContent' | 'wideContent';
}>`
  position: absolute;
  box-sizing: border-box;
  transform: translate(50%, -25%);
  text-align: center;
  right: ${({ theme }) => theme.__hd__.badge.space.right};
  height: ${({ theme }) => theme.__hd__.badge.sizes.height};
  min-width: ${({ theme }) => theme.__hd__.badge.sizes.minWidth};
  border: ${({ theme }) => theme.__hd__.badge.borderWidths.default} solid;
  border-radius: ${({ theme }) => theme.__hd__.badge.radii.default};
  font-size: ${({ theme }) => theme.__hd__.badge.fontSizes.default};
  font-weight: ${({ theme }) => theme.__hd__.badge.fontWeights.default};
  line-height: 1;
  color: ${({ theme }) => theme.__hd__.badge.colors.text};
  box-shadow: ${({ theme }) => theme.__hd__.badge.shadows.default};
  margin: 0;
  padding: 0;

  ${({ themeIntent, theme }) => {
    switch (themeIntent) {
      case 'success':
        return css`
          background-color: ${theme.__hd__.badge.colors.success};
          border-color: ${theme.__hd__.badge.colors.success};
        `;
      case 'primary':
        return css`
          background-color: ${theme.__hd__.badge.colors.primary};
          border-color: ${theme.__hd__.badge.colors.primary};
        `;
      case 'warning':
        return css`
          background-color: ${theme.__hd__.badge.colors.warning};
          border-color: ${theme.__hd__.badge.colors.warning};
        `;
      case 'danger':
        return css`
          background-color: ${theme.__hd__.badge.colors.danger};
          border-color: ${theme.__hd__.badge.colors.danger};
        `;
      case 'error':
        return css`
          background-color: ${theme.__hd__.badge.colors.error};
          border-color: ${theme.__hd__.badge.colors.error};
        `;
    }
  }};

  ${({ themePadding, theme }) => {
    switch (themePadding) {
      case 'narrowContent':
        return css`
          padding: ${theme.__hd__.badge.space.narrowPadding};
        `;
      case 'wideContent':
        return css`
          padding: ${theme.__hd__.badge.space.widePadding};
        `;
    }
  }};
`;

const CountIconBadge = styled.span`
  display: inline-flex;
  position: absolute;
  transform: translate(50%, -25%);
  right: ${({ theme }) => theme.__hd__.badge.space.right};
  margin: 0;
  padding: 0;
  font-size: ${({ theme }) => theme.__hd__.badge.fontSizes.default};
  line-height: 1;
`;

export {
  BadgeWrapper,
  StyledBadge,
  StatusBadge,
  CountNumberBadge,
  CountIconBadge,
};
