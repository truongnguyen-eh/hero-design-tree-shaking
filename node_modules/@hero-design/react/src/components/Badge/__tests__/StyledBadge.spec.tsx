import React from 'react';

import theme from '../../../theme';
import renderWithTheme from '../../../testUtils/renderWithTheme';

import { StyledBadge, StatusBadge, CountNumberBadge } from '../StyledBadge';

describe('StyledBadge', () => {
  it('has narrowContent style', () => {
    const { container } = renderWithTheme(
      <StyledBadge themeVariant="filled-primary" themePadding="narrowContent" />
    );

    expect(container.firstChild).toHaveStyle(`
      padding: ${theme.__hd__.badge.space.narrowPadding};
    `);
  });

  it('has wideContent style', () => {
    const { container } = renderWithTheme(
      <StyledBadge themeVariant="filled-primary" themePadding="wideContent" />
    );

    expect(container.firstChild).toHaveStyle(`
      padding: ${theme.__hd__.badge.space.widePadding};
    `);
  });
});

describe('StatusBadge', () => {
  it.each`
    intent       | expectedBackground
    ${'basic'}   | ${theme.__hd__.badge.colors.basicStatusText}
    ${'success'} | ${theme.__hd__.badge.colors.success}
    ${'primary'} | ${theme.__hd__.badge.colors.primary}
    ${'warning'} | ${theme.__hd__.badge.colors.warning}
    ${'danger'}  | ${theme.__hd__.badge.colors.danger}
    ${'error'}   | ${theme.__hd__.badge.colors.error}
  `(
    'has $expectedBackground background when intent is $intent',
    ({ intent, expectedBackground }) => {
      const { container } = renderWithTheme(
        <StatusBadge themeIntent={intent} />
      );

      expect(container.firstChild).toHaveStyle(`
        background-color: ${expectedBackground};
      `);
    }
  );
});

describe('CountNumberBadge', () => {
  it.each`
    intent       | expectedColor
    ${'success'} | ${theme.__hd__.badge.colors.success}
    ${'primary'} | ${theme.__hd__.badge.colors.primary}
    ${'warning'} | ${theme.__hd__.badge.colors.warning}
    ${'danger'}  | ${theme.__hd__.badge.colors.danger}
    ${'error'}   | ${theme.__hd__.badge.colors.error}
  `(
    'has $expectedColor color when intent is $intent',
    ({ intent, expectedColor }) => {
      const { container } = renderWithTheme(
        <CountNumberBadge themeIntent={intent} themePadding="narrowContent" />
      );

      expect(container.firstChild).toHaveStyle(`
        background-color: ${expectedColor};
        border-color: ${expectedColor};
      `);
    }
  );

  it('has narrowContent style', () => {
    const { container } = renderWithTheme(
      <CountNumberBadge themeIntent="success" themePadding="narrowContent" />
    );

    expect(container.firstChild).toHaveStyle(`
      padding: ${theme.__hd__.badge.space.narrowPadding};
    `);
  });

  it('has wideContent style', () => {
    const { container } = renderWithTheme(
      <CountNumberBadge themeIntent="success" themePadding="wideContent" />
    );

    expect(container.firstChild).toHaveStyle(`
      padding: ${theme.__hd__.badge.space.widePadding};
    `);
  });
});
