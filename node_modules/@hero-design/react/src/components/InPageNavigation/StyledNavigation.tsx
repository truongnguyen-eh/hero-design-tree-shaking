import styled, { css } from 'styled-components';
import { StyledIconButton } from '../Button/StyledButton';

const VerticalItem = styled.li<{
  themeClickedState: boolean;
  themeDisabledState?: boolean;
}>`
  margin: 0;
  padding: ${({ theme }) => theme.__hd__.inPageNavigation.space.itemPadding};
  border-radius: ${({ theme }) => theme.__hd__.inPageNavigation.radii.item};
  cursor: pointer;
  display: flex;
  align-items: center;

  &:hover {
    background-color: ${({ theme }) =>
      theme.__hd__.inPageNavigation.colors.itemHoverBackgound};
    ${({ themeDisabledState }) => {
      if (themeDisabledState) {
        return css`
          cursor: not-allowed;
          background-color: transparent;
        `;
      }
    }};
  }

  ${({ theme, themeClickedState }) => {
    switch (themeClickedState) {
      case true:
        return css`
          background-color: ${theme.__hd__.inPageNavigation.colors
            .itemClickedBackground} !important;
        `;
      case false:
        return css``;
    }
  }};
`;

const VerticalWrapper = styled.ul`
  margin: 0;
  padding: 0;
  list-style-type: none;

  > ${VerticalItem}:not(:last-child) {
    margin-bottom: ${({ theme }) =>
      theme.__hd__.inPageNavigation.space.itemMarginBottom};
  }
`;

const HorizontalItem = styled.li<{
  themeClickedState: boolean;
  themeBreakPoint: number;
  themeDisabledState?: boolean;
}>`
  margin: 0;
  padding: ${({ theme }) => theme.__hd__.inPageNavigation.space.itemPadding};
  border-radius: ${({ theme }) => theme.__hd__.inPageNavigation.radii.item};
  cursor: pointer;
  flex: 1;
  display: flex;
  align-items: center;

  &:hover {
    background-color: ${({ theme }) =>
      theme.__hd__.inPageNavigation.colors.itemHoverBackgound};
    ${({ themeDisabledState }) => {
      if (themeDisabledState) {
        return css`
          cursor: not-allowed;
          background-color: transparent;
        `;
      }
    }};
  }

  ${({ theme, themeClickedState }) => {
    switch (themeClickedState) {
      case true:
        return css`
          background-color: ${theme.__hd__.inPageNavigation.colors
            .itemClickedBackground} !important;
        `;
      case false:
        return css``;
    }
  }};
`;

const HorizontalContainer = styled.div`
  margin: 0;
  padding: 0;
  width: 100%;
`;

const HorizontalWrapper = styled.ul`
  margin: 0;
  padding: 0;
  list-style-type: none;

  display: flex;
  align-items: center;
  justify-content: space-between;

  > ${HorizontalItem}:not(:last-child) {
    margin-right: ${({ theme }) =>
      theme.__hd__.inPageNavigation.space.itemMarginRight};
  }
`;

const MoreItem = styled.li<{
  themeClickedState: boolean;
  themeDisabledState?: boolean;
}>`
  margin: 0;
  padding: ${({ theme }) => theme.__hd__.inPageNavigation.space.itemPadding};
  cursor: pointer;
  display: flex;
  align-items: center;

  &:hover {
    background-color: ${({ theme }) =>
      theme.__hd__.inPageNavigation.colors.itemHoverBackgound};
    ${({ themeDisabledState }) => {
      if (themeDisabledState) {
        return css`
          cursor: not-allowed;
          background-color: transparent;
        `;
      }
    }};
  }

  ${({ theme, themeClickedState }) => {
    switch (themeClickedState) {
      case true:
        return css`
          background-color: ${theme.__hd__.inPageNavigation.colors
            .itemClickedBackground} !important;
        `;
      case false:
        return css``;
    }
  }};
`;

const IconListWrapper = styled.div`
  margin-left: auto;
  display: flex;
  align-items: center;
  gap: ${({ theme }) => theme.__hd__.inPageNavigation.space.itemGap};
  > ${StyledIconButton} {
    font-size: inherit;
  }
`;

export {
  VerticalWrapper,
  HorizontalContainer,
  HorizontalWrapper,
  VerticalItem,
  HorizontalItem,
  MoreItem,
  IconListWrapper,
};
