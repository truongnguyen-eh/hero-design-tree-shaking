import styled, { css } from 'styled-components';
import type { InputState, Size } from './utils';

const StyledTextArea = styled.textarea<{
  autoResize?: boolean;
  themeSize: Size;
  themeState: InputState;
}>`
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  border: ${({ theme }) => theme.__hd__.input.borderWidths.default} solid
    ${({ theme }) => theme.__hd__.input.colors.border};
  border-radius: ${({ theme }) => theme.__hd__.input.radii.default};
  font-weight: ${({ theme }) => theme.__hd__.input.fontWeights.default};
  color: ${({ theme }) => theme.__hd__.input.colors.text};

  &::placeholder {
    color: ${({ theme }) => theme.__hd__.input.colors.disabledText};
  }

  ${({ autoResize }): string =>
    autoResize === true
      ? `
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        resize: none;
        overflow: hidden;
      `
      : `resize: vertical`};

  ${({ themeState, theme }) => {
    switch (themeState) {
      case 'enabled':
        return css`
          background: ${theme.__hd__.input.colors.background};
          &:hover {
            border-color: ${theme.__hd__.input.colors.focusBorder};
          }
          &:focus {
            outline: none;
            border-color: ${theme.__hd__.input.colors.focusBorder};
            box-shadow: ${theme.__hd__.input.shadows.focus};
          }
        `;
      case 'disabled':
        return css`
          color: ${theme.__hd__.input.colors.disabledText};
          border-color: ${theme.__hd__.input.colors.border};
          background: ${theme.__hd__.input.colors.disabledBackground};
          cursor: not-allowed;
        `;
      case 'invalid':
        return css`
          background: ${theme.__hd__.input.colors.background};
          border-color: ${theme.__hd__.input.colors.invalidBorder};
          &:focus-within {
            outline: none;
            border-color: ${theme.__hd__.input.colors.invalidBorder};
            box-shadow: ${theme.__hd__.input.shadows.invalidFocus};
          }
        `;
    }
  }};

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          padding: ${theme.__hd__.input.space.smallPadding};
          min-height: ${theme.__hd__.input.sizes.textAreaSmall};
          font-size: ${theme.__hd__.input.fontSizes.small};
          line-height: ${theme.__hd__.input.lineHeights.small};
        `;
      case 'medium':
        return css`
          padding: ${theme.__hd__.input.space.mediumPadding};
          min-height: ${theme.__hd__.input.sizes.textAreaMedium};
          font-size: ${theme.__hd__.input.fontSizes.medium};
          line-height: ${theme.__hd__.input.lineHeights.medium};
        `;
      case 'large':
        return css`
          padding: ${theme.__hd__.input.space.largePadding};
          min-height: ${theme.__hd__.input.sizes.textAreaLarge};
          font-size: ${theme.__hd__.input.fontSizes.large};
          line-height: ${theme.__hd__.input.lineHeights.large};
        `;
    }
  }};
`;

const AutoResizeWrapper = styled.div`
  position: relative;
  margin: 0;
  padding: 0;
`;

const HiddenTextArea = styled.div<{ themeSize: Size }>`
  width: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  border: ${({ theme }) => theme.__hd__.input.borderWidths.default} solid
    ${({ theme }) => theme.__hd__.input.colors.border};
  font-weight: ${({ theme }) => theme.__hd__.input.fontWeights.default};
  overflow-wrap: break-word;
  white-space: pre-line;
  opacity: 0;

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'small':
        return css`
          padding: ${theme.__hd__.input.space.smallPadding};
          min-height: ${theme.__hd__.input.sizes.textAreaSmall};
          font-size: ${theme.__hd__.input.fontSizes.small};
          line-height: ${theme.__hd__.input.lineHeights.small};
        `;
      case 'medium':
        return css`
          padding: ${theme.__hd__.input.space.mediumPadding};
          min-height: ${theme.__hd__.input.sizes.textAreaMedium};
          font-size: ${theme.__hd__.input.fontSizes.medium};
          line-height: ${theme.__hd__.input.lineHeights.medium};
        `;
      case 'large':
        return css`
          padding: ${theme.__hd__.input.space.largePadding};
          min-height: ${theme.__hd__.input.sizes.textAreaLarge};
          font-size: ${theme.__hd__.input.fontSizes.large};
          line-height: ${theme.__hd__.input.lineHeights.large};
        `;
    }
  }};
`;

export { AutoResizeWrapper, HiddenTextArea };

export default StyledTextArea;
