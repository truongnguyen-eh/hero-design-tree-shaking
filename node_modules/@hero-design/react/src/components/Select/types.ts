type BaseOption<V extends string | number> = {
  disabled?: boolean;
  helpText?: string;
  text: string;
  value: V;
};

type GroupedOption<V extends string | number, T extends BaseOption<V>> = {
  category: string;
  options: T[];
};

type MultiBaseOption<V extends string | number> = BaseOption<V> & {
  removable?: boolean;
};

type GroupedMultiOption<
  V extends string | number,
  T extends MultiBaseOption<V>
> = {
  category: string;
  options: T[];
};

export type { BaseOption, GroupedOption, MultiBaseOption, GroupedMultiOption };
