import React from 'react';
import userEvent from '@testing-library/user-event';
import { waitFor } from '@testing-library/react';
import renderWithTheme from '../../../testUtils/renderWithTheme';

import Panel from '../Panel';

describe('Panel', () => {
  const TestComponent = () => {
    const [selectedSubItemId, setSelectedSubItemId] = React.useState<string>();
    const profileItems = {
      '': [
        {
          id: 'general',
          text: 'General',
          url: '/general',
        },
        {
          id: 'notifications',
          text: 'Notifications',
          url: '/notifications',
          count: 5,
        },
      ],
      Management: [
        {
          id: 'schedule',
          text: 'Schedule',
          subItems: [
            {
              id: 'week',
              text: 'Week',
              url: '/week',
            },
            {
              id: 'month',
              text: 'Month',
              url: '/month',
              count: 3,
            },
            {
              id: 'year',
              text: 'Year',
              url: '/year',
            },
          ],
        },
        {
          id: 'tasks',
          text: 'Tasks',
          url: '/tasks',
        },
      ],
    };

    return (
      <Panel
        heading="Profile"
        items={profileItems}
        selectedItemId={selectedSubItemId}
        onClickItem={(item) => setSelectedSubItemId(item?.id)}
        data-test-id="secondary-profile-panel"
      />
    );
  };

  it('renders secondary panel correctly', () => {
    const { getByText, getByTestId } = renderWithTheme(<TestComponent />);

    expect(getByTestId('secondary-profile-panel')).toBeInTheDocument();
    expect(getByText('General')).toBeInTheDocument();
    expect(getByText('Notifications')).toBeInTheDocument();
    expect(getByText('Management')).toBeInTheDocument();
    expect(getByText('Schedule')).toBeInTheDocument();
    expect(getByText('Tasks')).toBeInTheDocument();
    expect(getByText('5')).toBeInTheDocument();
  });

  it('renders tertiary panel when clicking on secondary item has submenu', async () => {
    const { getByText, queryAllByText } = renderWithTheme(<TestComponent />);

    userEvent.click(getByText('Schedule'));
    await waitFor(() => expect(queryAllByText('General').length).toEqual(0), {
      timeout: 500,
    });

    expect(queryAllByText('Notifications').length).toEqual(0);
    expect(queryAllByText('Management').length).toEqual(0);
    expect(queryAllByText('Tasks').length).toEqual(0);
    expect(queryAllByText('5').length).toEqual(0);
    expect(getByText('Back to Schedule')).toBeInTheDocument();
    expect(getByText('Week')).toBeInTheDocument();
    expect(getByText('Month')).toBeInTheDocument();
    expect(getByText('Year')).toBeInTheDocument();
    expect(getByText('3')).toBeInTheDocument();
  });

  it('renders secondary panel from clicking on `back to secondary` from tertiary panel', async () => {
    const { getByText, queryAllByText } = renderWithTheme(<TestComponent />);

    userEvent.click(getByText('Schedule'));

    await waitFor(
      () => expect(getByText('Back to Schedule')).toBeInTheDocument(),
      { timeout: 500 }
    );

    userEvent.click(getByText('Back to Schedule'));
    await waitFor(() => expect(queryAllByText('Week').length).toEqual(0), {
      timeout: 500,
    });
    expect(queryAllByText('Month').length).toEqual(0);
    expect(queryAllByText('Year').length).toEqual(0);
    expect(queryAllByText('3').length).toEqual(0);
    expect(getByText('General')).toBeInTheDocument();
    expect(getByText('Notifications')).toBeInTheDocument();
    expect(getByText('Management')).toBeInTheDocument();
    expect(getByText('Schedule')).toBeInTheDocument();
    expect(getByText('Tasks')).toBeInTheDocument();
    expect(getByText('5')).toBeInTheDocument();
  });

  it('renders blank panel', () => {
    const { getByText } = renderWithTheme(
      <Panel
        variant="blank"
        heading="Organisations"
        items={{}}
        onClickItem={() => {
          console.log('click');
        }}
      >
        Panel content
      </Panel>
    );

    expect(getByText('Organisations')).toBeInTheDocument();
    expect(getByText('Panel content')).toBeInTheDocument();
  });
});
