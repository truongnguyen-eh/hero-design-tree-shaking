import React from 'react';
import userEvent from '@testing-library/user-event';
import { waitFor } from '@testing-library/react';
import renderWithTheme from '../../../testUtils/renderWithTheme';

import SideBar from '../SideBar';

describe('SideBar', () => {
  const TestComponent = () => {
    const [selectedItemId, setSelectedItemId] = React.useState<string>();
    const items = {
      header: [{ id: 'org', icon: 'multiple-users-outlined' } as const],
      body: [
        {
          id: 'home',
          icon: 'home-outlined',
          text: 'Home',
          dataAttrs: { 'data-walk-identifier': 'home-item' },
        } as const,
        {
          id: 'profile',
          icon: 'user-outlined',
          text: 'Profile',
          panel: <div>Panel placeholder</div>,
        } as const,
        {
          id: 'pay',
          icon: 'moneybag-outlined',
          text: 'Pay',
          count: 9,
        } as const,
      ],
      footer: [
        { id: 'setting', icon: 'cog-outlined', text: 'Setting' } as const,
      ],
    };
    return (
      <SideBar
        items={items}
        selectedItemId={selectedItemId}
        onClickItem={(item) => setSelectedItemId(item?.id)}
      />
    );
  };

  it('renders correctly with header icons and primary items', () => {
    const { getByText, getByTestId } = renderWithTheme(<TestComponent />);

    expect(getByTestId('header-item-org')).toBeInTheDocument();
    expect(getByText('Home')).toBeInTheDocument();
    expect(getByText('Profile')).toBeInTheDocument();
    expect(getByText('Pay')).toBeInTheDocument();
    expect(getByText('Setting')).toBeInTheDocument();
    expect(getByText('9')).toBeInTheDocument();
  });

  it('renders side panel when click on items', async () => {
    const { getByText, queryAllByText } = renderWithTheme(<TestComponent />);

    expect(queryAllByText('Panel placeholder').length).toEqual(0);
    userEvent.click(getByText('Profile'));
    await waitFor(
      () => {
        expect(getByText('Panel placeholder')).toBeInTheDocument();
      },
      { timeout: 1000 }
    );
  });

  it('can not render sidebar panel when click on disabled items', async () => {
    const DisabledTestComponent = () => {
      const [selectedItemId, setSelectedItemId] = React.useState<string>();
      const items = {
        header: [{ id: 'org', icon: 'multiple-users-outlined' } as const],
        body: [
          {
            id: 'home',
            icon: 'home-outlined',
            text: 'Home',
            dataAttrs: { 'data-walk-identifier': 'home-item' },
          } as const,
          {
            id: 'profile',
            icon: 'user-outlined',
            text: 'Profile',
            panel: <div>Disabled Panel placeholder</div>,
            disabled: true,
          } as const,
          {
            id: 'pay',
            icon: 'moneybag-outlined',
            text: 'Pay',
            count: 9,
          } as const,
        ],
        footer: [
          { id: 'setting', icon: 'cog-outlined', text: 'Setting' } as const,
        ],
      };
      return (
        <SideBar
          key="disabled-test"
          items={items}
          selectedItemId={selectedItemId}
          onClickItem={(item) => setSelectedItemId(item?.id)}
        />
      );
    };

    const { queryByText, queryAllByText, getByText } = renderWithTheme(
      <DisabledTestComponent />
    );

    expect(queryAllByText('Panel placeholder').length).toEqual(0);
    userEvent.click(getByText('Profile'));

    expect(queryByText('Disabled Panel placeholder')).toBe(null);
  });
});
