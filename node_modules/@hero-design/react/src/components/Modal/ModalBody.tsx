import React, { forwardRef } from 'react';
import type { ReactNode, ReactElement } from 'react';
import { useCss } from '../../utils/hooks';
import { ModalBody as StyledModalBody } from './StyledModal';
import ModalContext from './ModalContext';
import type { ModalContextType } from './ModalContext';
import type { CommonProps } from '../common';

export interface ModalBodyProps extends CommonProps {
  /**
   * Modal body content.
   */
  children: ReactNode;
}

const ModalBody = forwardRef<HTMLDivElement, ModalBodyProps>(
  (
    {
      children,
      id,
      className,
      style,
      sx = {},
      'data-test-id': dataTestId,
    }: ModalBodyProps,
    forwardedRef
  ): ReactElement => {
    const { isPopupModal } = React.useContext(ModalContext) as ModalContextType;
    return (
      <StyledModalBody
        themeIsPopUp={isPopupModal}
        id={id}
        className={className}
        style={{ ...style, ...useCss(sx) }}
        data-test-id={dataTestId}
        ref={forwardedRef}
      >
        {children}
      </StyledModalBody>
    );
  }
);

ModalBody.displayName = 'ModalBody';

export default ModalBody;
