import type { ThemeScales } from './ThemeInterfaces';
import type { Palette, SystemPalette } from '../../theme/global/colors';
import type { BorderWidths, Radii } from '../../theme/global/borders';
import type {
  FontSizes,
  FontWeights,
  LineHeights,
} from '../../theme/global/typography';
import type { Shadows } from '../../theme/global/shadows';
import type { Space } from '../../theme/global/space';

// Ref: https://github.com/type-challenges/type-challenges/blob/main/utils/index.d.ts
type Expect<T extends true> = T;

export type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends <
  T
>() => T extends Y ? 1 : 2
  ? true
  : false;

type Kebab<
  T extends string,
  A extends string = ''
> = T extends `${infer F}${infer R}`
  ? Kebab<R, `${A}${F extends Lowercase<F> ? '' : '-'}${Lowercase<F>}`>
  : A;

type ExtractLightKey<T> = T extends `${infer A}-light${infer C}`
  ? `${Lowercase<A>}-light-${Lowercase<C>}`
  : T;

type ExtractDarkKey<T> = T extends `${infer A}-dark${infer C}`
  ? `${Lowercase<A>}-dark-${Lowercase<C>}`
  : T;

type KebabPaletteKeys<T> = {
  [K in keyof T as K extends string
    ? ExtractLightKey<ExtractDarkKey<Kebab<K>>>
    : K]: T[K];
};

type KebabKeys<T> = {
  [K in keyof T as K extends string ? Kebab<K> : K]: T[K];
};

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
// eslint-disable-next-line @typescript-eslint/no-unused-vars
type _assertions = [
  Expect<
    Equal<
      ThemeScales['colors'],
      keyof KebabPaletteKeys<Palette> | keyof KebabKeys<SystemPalette>
    >
  >,
  Expect<Equal<ThemeScales['borderWidths'], keyof KebabKeys<BorderWidths>>>,
  Expect<Equal<ThemeScales['fontSizes'], keyof KebabKeys<FontSizes>>>,
  Expect<Equal<ThemeScales['fontWeights'], keyof KebabKeys<FontWeights>>>,
  Expect<Equal<ThemeScales['lineHeights'], keyof KebabKeys<LineHeights>>>,
  Expect<Equal<ThemeScales['radii'], keyof KebabKeys<Radii>>>,
  Expect<Equal<ThemeScales['shadows'], keyof KebabKeys<Shadows>>>,
  Expect<Equal<ThemeScales['space'], keyof KebabKeys<Space>>>
];
