import React from 'react';

import type { ReactElement, ChangeEvent } from 'react';
import {
  StyledRateIconInput,
  StyledRateIconLabel,
  StyledRateIcon,
} from './StyledRate';
import type { CommonProps } from '../common';

export interface RateIconProps<T extends string | number>
  extends Omit<CommonProps, 'id'> {
  active: boolean;
  checked: boolean;
  disabled: boolean;
  name?: string;
  onChange: (e: ChangeEvent<HTMLInputElement>) => void;
  setHoverValue: React.Dispatch<React.SetStateAction<T | null>>;
  size: 'medium' | 'large';
  value: T;
}

const RateIcon = <T extends string | number>({
  name,
  value,
  active,
  disabled,
  checked,
  onChange,
  setHoverValue,
  size = 'medium',
}: RateIconProps<T>): ReactElement => {
  return (
    <StyledRateIconLabel
      onMouseEnter={!disabled ? () => setHoverValue(value) : undefined}
      onMouseLeave={!disabled ? () => setHoverValue(null) : undefined}
    >
      <StyledRateIconInput
        type="radio"
        name={name}
        value={value}
        checked={checked}
        onChange={onChange}
        disabled={disabled}
      />
      <StyledRateIcon
        icon={active ? 'star' : 'star-outlined'}
        active={active}
        size={size}
        data-test-id={active ? 'active-rate-icon' : 'inactive-rate-icon'}
      />
    </StyledRateIconLabel>
  );
};

export default RateIcon;
