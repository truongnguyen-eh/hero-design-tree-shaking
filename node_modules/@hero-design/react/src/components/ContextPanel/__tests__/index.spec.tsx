import React, { useState } from 'react';

import { fireEvent } from '@testing-library/react';
import renderWithTheme from '../../../testUtils/renderWithTheme';
import ContextPanel from '../index';

window.scrollTo = jest.fn();

describe('rendering', () => {
  it('render with props correctly', () => {
    const { getByTestId } = renderWithTheme(
      <ContextPanel
        open
        title="Customized header"
        body="Customized body"
        footer="Customized footer"
      />
    );

    expect(getByTestId('context-panel-container')).toBeInTheDocument();
    expect(getByTestId('context-panel-overlay')).toBeInTheDocument();
    expect(getByTestId('context-panel-context-panel')).toBeInTheDocument();
    expect(getByTestId('context-panel-header')).toBeInTheDocument();
    expect(getByTestId('context-panel-footer')).toBeInTheDocument();
    expect(getByTestId('context-panel-body')).toBeInTheDocument();
  });

  it('render context panel contents using sub components', () => {
    const { getByText, queryByTestId } = renderWithTheme(
      <ContextPanel open>
        <ContextPanel.Header>Customized header</ContextPanel.Header>
        <ContextPanel.Body>Customized body</ContextPanel.Body>
        <ContextPanel.Footer>Customized footer</ContextPanel.Footer>
      </ContextPanel>
    );
    expect(getByText('Customized header')).toBeInTheDocument();
    expect(getByText('Customized body')).toBeInTheDocument();
    expect(getByText('Customized footer')).toBeInTheDocument();
    expect(queryByTestId('context-panel-close-button')).toBe(null);
  });

  it('lock scroll on body correctly', () => {
    const ContextPanelTest = () => {
      const [open, setOpen] = useState(true);

      return (
        <div>
          <button type="button" onClick={() => setOpen(true)}>
            Open context panel
          </button>
          <ContextPanel open={open} onClose={() => setOpen(false)}>
            <ContextPanel.Header>Customized header</ContextPanel.Header>
            <ContextPanel.Body>Customized body</ContextPanel.Body>
            <ContextPanel.Footer>Customized footer</ContextPanel.Footer>
          </ContextPanel>
        </div>
      );
    };
    const { getByText, getByTestId } = renderWithTheme(<ContextPanelTest />);

    fireEvent.click(getByText('Open context panel'));
    expect(document.body.style.position).toEqual('fixed');

    fireEvent.click(getByTestId('context-panel-overlay'));
    expect(document.body.style.position).toEqual('');
  });
});
