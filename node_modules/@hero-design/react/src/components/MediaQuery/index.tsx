import React from 'react';
import { useSizeMediaQuery } from '../../utils/hooks';
import { MediaQueryProps } from './types';

const MediaQuery = <C extends React.ElementType = typeof React.Fragment>(
  props: MediaQueryProps<C>
) => {
  const { children, as: WrapperComponent = React.Fragment, ...rest } = props;
  const size = useSizeMediaQuery();
  if (children)
    return <WrapperComponent {...rest}>{children(size)}</WrapperComponent>;
  const { small, medium, large, xlarge, ...restProps } = props;
  const component = (() => {
    switch (size) {
      case 'xlarge': {
        return xlarge;
      }
      case 'large': {
        return large;
      }
      case 'medium': {
        return medium;
      }
      case 'small': {
        return small;
      }
      default: {
        return small;
      }
    }
  })();
  return <WrapperComponent {...restProps}>{component}</WrapperComponent>;
};

export const useMediaQuery = useSizeMediaQuery;
export default MediaQuery;
