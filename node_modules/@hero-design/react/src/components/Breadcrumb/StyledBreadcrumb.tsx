import styled, { css } from 'styled-components';
import { Link } from 'react-router-dom';

const SingleBreadcrumbContainer = styled.div`
  display: flex;
  font-size: ${({ theme }) => theme.__hd__.breadcrumb.fontSizes.item};
  font-weight: ${({ theme }) => theme.__hd__.breadcrumb.fontWeights.item};
  line-height: ${({ theme }) => theme.__hd__.breadcrumb.lineHeights.item};
  color: ${({ theme }) => theme.__hd__.breadcrumb.colors.item};
  margin: 0;
  padding: 0;

  > i {
    line-height: ${({ theme }) => theme.__hd__.breadcrumb.lineHeights.item};
    margin-right: ${({ theme }) =>
      theme.__hd__.breadcrumb.space.backIconMarginRight};
  }
`;

const BreadcrumbContainer = styled.ul`
  padding: 0;
  margin: 0;
  font-size: ${({ theme }) => theme.__hd__.breadcrumb.fontSizes.item};
  font-weight: ${({ theme }) => theme.__hd__.breadcrumb.fontWeights.item};
  line-height: ${({ theme }) => theme.__hd__.breadcrumb.lineHeights.item};
  list-style: none;
`;

const ABreadcrumbItem = styled.a``;

const LinkBreadcrumbItem = styled(Link)``;

const getItemStyle = (active: boolean) => {
  const key = active === true ? 'itemActive' : 'item';
  return css`
    text-decoration: none;
    margin: 0;
    padding: 0;
    color: ${({ theme }) => theme.__hd__.breadcrumb.colors[key]};
    font-size: ${({ theme }) => theme.__hd__.breadcrumb.fontSizes[key]};
    font-weight: ${({ theme }) => theme.__hd__.breadcrumb.fontWeights[key]};
    line-height: ${({ theme }) => theme.__hd__.breadcrumb.lineHeights[key]};

    & > * {
      display: inline;
      margin: 0;
      padding: 0;
      color: ${({ theme }) => theme.__hd__.breadcrumb.colors[key]};
      font-size: ${({ theme }) => theme.__hd__.breadcrumb.fontSizes[key]};
      font-weight: ${({ theme }) => theme.__hd__.breadcrumb.fontWeights[key]};
      line-height: ${({ theme }) => theme.__hd__.breadcrumb.lineHeights[key]};
    }
  `;
};

const TextBreadcrumbWrapper = styled.li`
  display: inline;
  margin: 0;
  padding: 0;

  ${getItemStyle(true)};
`;

const LinkBreadcrumbWrapper = styled(TextBreadcrumbWrapper)`
  ${ABreadcrumbItem}, ${LinkBreadcrumbItem} {
    ${getItemStyle(false)};
  }
`;

const BreadcrumbItemSeparator = styled.span`
  margin: ${({ theme }) => theme.__hd__.breadcrumb.space.separatorMargin};
  padding: 0;
  color: ${({ theme }) => theme.__hd__.breadcrumb.colors.item};
`;

export {
  SingleBreadcrumbContainer,
  BreadcrumbContainer,
  TextBreadcrumbWrapper,
  LinkBreadcrumbWrapper,
  BreadcrumbItemSeparator,
  ABreadcrumbItem,
  LinkBreadcrumbItem,
};
