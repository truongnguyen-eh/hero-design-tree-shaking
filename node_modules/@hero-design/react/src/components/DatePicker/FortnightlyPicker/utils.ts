import { addDays, endOfWeek, startOfWeek, subDays } from 'date-fns';
import eachWeekOfInterval from 'date-fns/eachWeekOfInterval';
import format from 'date-fns/format';

function generateWeekTime(
  minDate: Date,
  maxDate: Date,
  customFormat = 'dd MMM yyyy',
  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6 = 0
): string[] {
  const result = eachWeekOfInterval(
    {
      start: startOfWeek(addDays(minDate, 6), { weekStartsOn }),
      end: endOfWeek(subDays(maxDate, 6), { weekStartsOn }),
    },
    { weekStartsOn }
  );

  return result.map((date) => format(date, customFormat, { weekStartsOn }));
}

export function generateFortnightlyTime(
  minDate: Date,
  maxDate: Date,
  customFormat = 'dd MMM yyyy',
  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6 = 0
): string[] {
  const weekTime = generateWeekTime(
    minDate,
    maxDate,
    customFormat,
    weekStartsOn
  );
  return (weekTime.length % 2 === 1 ? weekTime.slice(0, -1) : weekTime).filter(
    (_, i) => i % 2 === 0
  );
}
