import { hasSelection, formatValue, getCaretIcon, resetValue } from '../utils';

describe('Utils: hasSelection', () => {
  it('no selection', () => {
    const output1 = hasSelection([]);
    const output2 = hasSelection('');
    const output3 = hasSelection({ endDate: undefined, startDate: undefined });
    const output4 = hasSelection(undefined);
    expect(output1).toEqual(false);
    expect(output2).toEqual(false);
    expect(output3).toEqual(false);
    expect(output4).toEqual(false);
  });

  it('has selection', () => {
    const output1 = hasSelection(['all']);
    const output2 = hasSelection('search value');
    const output3 = hasSelection({
      endDate: '20/10/2022',
      startDate: '20/10/2022',
    });
    expect(output1).toEqual(true);
    expect(output2).toEqual(true);
    expect(output3).toEqual(true);
  });
});

describe('Utils: formatValue', () => {
  it('format value of array', () => {
    const output = formatValue(['all', 'direct']);
    expect(output).toEqual('all, direct');
  });

  it('format value of a string', () => {
    const output = formatValue('Tran Van');
    expect(output).toEqual('Tran Van');
  });

  it('format value of an object', () => {
    const output = formatValue({
      endDate: '22/10/2022',
      startDate: '20/10/2022',
    });
    expect(output).toEqual('20/10/2022 - 22/10/2022');
  });

  it('format undefined value', () => {
    const output = formatValue(undefined);
    expect(output).toEqual('');
  });
});

describe('Utils: getCaretIcon', () => {
  it('get arrow-up icon', () => {
    const output = getCaretIcon(true);
    expect(output).toEqual('arrow-up');
  });
  it('get arrow-down icon', () => {
    const output = getCaretIcon(false);
    expect(output).toEqual('arrow-down');
  });
});

describe('Utils: resetValue', () => {
  it('reset value of array', () => {
    const output = resetValue(['all', 'direct']);
    expect(output).toEqual([]);
  });

  it('reset value of a string', () => {
    const output = resetValue('Hao Vo');
    expect(output).toEqual('');
  });

  it('reset value of an object', () => {
    const output = resetValue({
      endDate: '22/10/2022',
      startDate: '20/10/2022',
    });
    expect(output).toEqual({});
  });

  it('reset undefined value', () => {
    const output = resetValue(undefined);
    expect(output).toEqual('');
  });
});
