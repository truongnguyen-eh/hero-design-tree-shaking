import { PossibleFilterValueItem } from './types';
import { IconName } from '../Icon';

const hasSelection = (value: PossibleFilterValueItem) => {
  if (Array.isArray(value)) return value.length !== 0;

  if (typeof value === 'string') return value.length !== 0;

  if (typeof value === 'object')
    return Object.values(value).find((v) => v !== undefined) !== undefined;

  return value !== undefined;
};

const formatValue = (value: PossibleFilterValueItem): string => {
  if (Array.isArray(value)) {
    return value.join(', ');
  }

  if (typeof value === 'string') return value;

  if (typeof value === 'object') {
    return `${value?.startDate} - ${value?.endDate}`;
  }

  return '';
};

const resetValue = (
  value: PossibleFilterValueItem
): PossibleFilterValueItem => {
  if (Array.isArray(value)) {
    return [];
  }

  if (typeof value === 'string') return '';

  if (typeof value === 'object') {
    return {};
  }

  return '';
};

const getCaretIcon = (open: boolean): IconName => {
  return open === true ? 'arrow-up' : 'arrow-down';
};

export { hasSelection, formatValue, resetValue, getCaretIcon };
