import { formatValue, getDefaultValue, isDefaultValue } from '../utils';

const dateRangeObj = { startDate: '01/01/2022', endDate: '02/03/2022' };

describe('formatValue', () => {
  it.each`
    case                   | value           | result
    ${'array of number'}   | ${[1, 2, 3]}    | ${'1, 2, 3'}
    ${'array of string'}   | ${['a', 'b']}   | ${'a, b'}
    ${'string'}            | ${'something'}  | ${'something'}
    ${'date range object'} | ${dateRangeObj} | ${'01/01/2022 - 02/03/2022'}
    ${'undefined'}         | ${undefined}    | ${''}
  `('works with $case', ({ value, result }) => {
    expect(formatValue(value)).toEqual(result);
  });
});

describe('getDefaultValue', () => {
  it.each`
    case                   | value           | result
    ${'array of number'}   | ${[1, 2, 3]}    | ${[]}
    ${'array of string'}   | ${['a', 'b']}   | ${[]}
    ${'string'}            | ${'something'}  | ${''}
    ${'date range object'} | ${dateRangeObj} | ${{}}
    ${'undefined'}         | ${undefined}    | ${undefined}
  `('works with $case', ({ value, result }) => {
    expect(getDefaultValue(value)).toEqual(result);
  });
});

describe('isDefaultValue', () => {
  it.each`
    case                          | value                       | result
    ${'empty array'}              | ${[]}                       | ${true}
    ${'non-empty array'}          | ${['a', 'b']}               | ${false}
    ${'empty string'}             | ${''}                       | ${true}
    ${'non-empty string'}         | ${'something'}              | ${false}
    ${'empty object'}             | ${{}}                       | ${true}
    ${'empty date range object'}  | ${{ startDate: undefined }} | ${true}
    ${'normal date range object'} | ${dateRangeObj}             | ${false}
    ${'undefined'}                | ${undefined}                | ${true}
  `('works with $case', ({ value, result }) => {
    expect(isDefaultValue(value)).toEqual(result);
  });
});
