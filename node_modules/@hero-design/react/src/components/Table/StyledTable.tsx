import styled, { css } from 'styled-components';

import type { FlattenSimpleInterpolation } from 'styled-components';

import Select from '../Select/SingleSelect';
import type { Breakpoint } from '../../utils/responsiveBreakpoints';
import { GlobalTheme } from '../../theme/global';

const hideIfLessThan = (
  theme: GlobalTheme,
  breakpoint?: Breakpoint
): FlattenSimpleInterpolation => {
  const maxWidth =
    breakpoint !== undefined ? theme.breakpoints[breakpoint] : '0px';
  return css`
    @media (max-width: ${maxWidth}) {
      display: none;
    }
  `;
};

const stickHorizontally = (shouldStickHorizontally: boolean, left?: number) =>
  shouldStickHorizontally && left !== undefined
    ? css`
        position: sticky;
        left: ${left}px;
        z-index: 1;
        &:hover {
          z-index: 2;
        }
      `
    : css``;

const showDivider = (shouldShowDivider: boolean) =>
  shouldShowDivider
    ? css`
        :after {
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          width: ${({ theme }) => theme.__hd__.table.sizes.columnDividerWidth};
          transform: translateX(100%);
          content: '';
          box-shadow: ${({ theme }) =>
            theme.__hd__.table.shadows.columnDivider};
        }
      `
    : css``;

const StyledTH = styled.th<{
  themeDisplayAtBreakpoint?: Breakpoint;
  themeHorizontallySticky: boolean;
  themeLeft?: number;
  themeShowDivider: boolean;
  themeSticky: boolean;
  themeWidth?: string | number;
  themeHasBorderRight?: boolean;
}>`
  box-sizing: border-box;
  font-size: ${({ theme }) => theme.__hd__.table.fontSizes.header};
  line-height: ${({ theme }) => theme.__hd__.table.lineHeights.header};
  font-weight: ${({ theme }) => theme.__hd__.table.fontWeights.header};
  color: ${({ theme }) => theme.__hd__.table.colors.headerText};
  background-color: ${({ theme }) =>
    theme.__hd__.table.colors.headerBackground};

  margin: 0;
  padding: ${({ theme }) => theme.__hd__.table.space.headerPadding};
  width: ${({ themeWidth }) =>
    typeof themeWidth === 'string' ? themeWidth : undefined};

  border: 0 solid ${({ theme }) => theme.__hd__.table.colors.headerBorder};

  &:not(:last-child) {
    border-right: ${({ theme }) => theme.__hd__.table.borderWidths.header} solid
      ${({ theme }) => theme.__hd__.table.colors.headerBorder};
  }

  ${({ themeHasBorderRight }) =>
    themeHasBorderRight
      ? css`
          &:not(:last-child) {
            border-right: ${({ theme }) =>
                theme.__hd__.table.borderWidths.header}
              solid ${({ theme }) => theme.__hd__.table.colors.headerBorder};
          }
        `
      : css`
          &:not(:last-child) {
            border-right: 0 solid
              ${({ theme }) => theme.__hd__.table.colors.headerBorder};
          }
        `};

  ${({ theme, themeDisplayAtBreakpoint }): FlattenSimpleInterpolation =>
    hideIfLessThan(theme, themeDisplayAtBreakpoint)};

  ${({ themeSticky }) => {
    switch (themeSticky) {
      case true:
        return css`
          position: sticky;
          top: 0;
          z-index: 1;
        `;
      case false:
        return css``;
    }
  }};

  ${({ themeHorizontallySticky, themeLeft }) =>
    stickHorizontally(themeHorizontallySticky, themeLeft)};

  ${({ themeShowDivider }) => showDivider(themeShowDivider)};
`;

const StyledInnerTH = styled.div<{ themeAlign: 'left' | 'right' | 'center' }>`
  display: flex;
  align-items: center;

  margin: 0;
  padding: 0;

  ${({ themeAlign }) => {
    switch (themeAlign) {
      case 'left':
        return css`
          text-align: left;
          justify-content: flex-start;
        `;
      case 'right':
        return css`
          text-align: right;
          justify-content: flex-end;
        `;

      case 'center':
        return css`
          text-align: center;
          justify-content: center;
        `;
    }
  }};
`;

const StyledTD = styled.td<{
  themeAlign?: 'left' | 'right';
  themeDisplayAtBreakpoint?: Breakpoint;
  themeHorizontallySticky: boolean;
  themeLeft?: number;
  themeShowDivider: boolean;
  themeWidth?: string;
}>`
  background-color: inherit;

  border: ${({ theme }) => theme.__hd__.table.borderWidths.cell} solid
    ${({ theme }) => theme.__hd__.table.colors.cellBorder};

  ${({ theme, themeDisplayAtBreakpoint }): FlattenSimpleInterpolation =>
    hideIfLessThan(theme, themeDisplayAtBreakpoint)};

  ${({ themeAlign }) => {
    switch (themeAlign) {
      case undefined:
      case 'left':
        return css`
          text-align: left;
        `;
      case 'right':
        return css`
          text-align: right;
        `;
    }
  }};
  width: ${(props): string | undefined => props.themeWidth};

  ${({ themeHorizontallySticky, themeLeft }) =>
    stickHorizontally(themeHorizontallySticky, themeLeft)};

  ${({ themeShowDivider }) => showDivider(themeShowDivider)};
`;

const nestedRowStyle = css`
  > tr {
    margin: 0;
    padding: 0;
    background-color: ${({ theme }) => theme.__hd__.table.colors.background};

    &:hover {
      background-color: ${({ theme }) =>
        theme.__hd__.table.colors.rowFocusBackground};
    }

    > td {
      overflow-wrap: break-word;

      font-size: ${({ theme }) => theme.__hd__.table.fontSizes.cell};
      line-height: ${({ theme }) => theme.__hd__.table.lineHeights.cell};
      font-weight: ${({ theme }) => theme.__hd__.table.fontWeights.cell};
      color: ${({ theme }) => theme.__hd__.table.colors.cellText};

      margin: 0;
      padding: ${({ theme }) => theme.__hd__.table.space.cellPadding};
      border-bottom: ${({ theme }) => theme.__hd__.table.borderWidths.row} solid
        ${({ theme }) => theme.__hd__.table.colors.rowBorder};
    }
  }
`;

const StyledTHead = styled.thead`
  margin: 0;
  padding: 0;
  background-color: ${({ theme }) =>
    theme.__hd__.table.colors.headerBackground};
  > tr {
    &:first-child {
      & > th:first-child {
        border-top-left-radius: ${({ theme }) =>
          theme.__hd__.table.radii.header};
      }
      & > th:last-child {
        border-top-right-radius: ${({ theme }) =>
          theme.__hd__.table.radii.header};
      }
    }

    &:last-child {
      & > th:first-child {
        border-bottom-left-radius: ${({ theme }) =>
          theme.__hd__.table.radii.header};
      }
      & > th:last-child {
        border-bottom-right-radius: ${({ theme }) =>
          theme.__hd__.table.radii.header};
      }
    }
  }

  ${nestedRowStyle};
`;

const StyledTBody = styled.tbody`
  margin: 0;
  padding: 0;

  ${nestedRowStyle};
`;

const StyledTable = styled.table<{ themeFixedLayout: boolean }>`
  width: 100%;
  text-align: left;
  border-collapse: separate;
  border-spacing: 0;
  margin: 0;
  padding: 0;

  border: ${({ theme }) => theme.__hd__.table.borderWidths.general} solid
    ${({ theme }) => theme.__hd__.table.colors.generalBorder};

  ${({ themeFixedLayout }) => {
    switch (themeFixedLayout) {
      case true:
        return css`
          table-layout: fixed;
        `;
      case false:
        return css``;
    }
  }};
`;

const StyledTableWrapper = styled.div<{
  themeSticky: boolean;
}>`
  background: ${({ theme }) => theme.__hd__.table.colors.background};
  margin: 0;
  padding: 0;

  ${({ themeSticky }) => {
    switch (themeSticky) {
      case true:
        return css``;
      case false:
        return css`
          overflow-x: auto;
        `;
    }
  }};
`;

const StyledSortingArrows = styled.div`
  font-size: ${({ theme }) => theme.__hd__.table.fontSizes.sortingIcon};
  line-height: ${({ theme }) => theme.__hd__.table.lineHeights.sortingIcon};

  display: flex;

  flex-direction: column;
  margin: 0;
  padding: 0;
  margin-left: ${({ theme }) => theme.__hd__.table.space.sortingIconMarginLeft};
`;

const StyledExpandableIcon = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  border: ${({ theme }) => theme.__hd__.table.borderWidths.expandableIcon} solid
    ${({ theme }) => theme.__hd__.table.colors.expandableIconBorder};
  border-radius: ${({ theme }) => theme.__hd__.table.radii.expandableIcon};

  width: ${({ theme }) => theme.__hd__.table.sizes.expandableIcon};
  height: ${({ theme }) => theme.__hd__.table.sizes.expandableIcon};

  font-size: ${({ theme }) => theme.__hd__.table.fontSizes.expandableIcon};
`;

const StyledPaginationWrapper = styled.div`
  margin: 0;
  padding: 0;
  margin-top: ${({ theme }) => theme.__hd__.table.space.paginationMarginTop};
  display: flex;
  justify-content: flex-end;
`;

const StyledItemsPerPageSelect = styled(Select)`
  input {
    width: ${({ theme }) => theme.__hd__.table.sizes.itemsPerPageInputWidth};
  }
`;

const StyledFilterWrapper = styled.div`
  margin: 0 0 0 auto;
  padding: 0;
`;

const StyledFilterTargetWrapper = styled.div`
  display: flex;
  margin: 0;
  padding: 0;
`;

const StyledEmptyTableContent = styled.div`
  display: flex;
  justify-content: center;
  box-sizing: border-box;
  font-size: ${({ theme }) => theme.__hd__.table.fontSizes.cell};
  margin: ${({ theme }) => theme.__hd__.table.space.emptyContentMargin};
  padding: ${({ theme }) => theme.__hd__.table.space.emptyContentPadding};
  color: ${({ theme }) => theme.__hd__.table.colors.emptyText};
`;

export {
  StyledTH,
  StyledInnerTH,
  StyledTD,
  StyledTHead,
  StyledTBody,
  StyledSortingArrows,
  StyledExpandableIcon,
  StyledPaginationWrapper,
  StyledItemsPerPageSelect,
  StyledFilterWrapper,
  StyledFilterTargetWrapper,
  StyledTableWrapper,
  StyledEmptyTableContent,
};

export default StyledTable;
