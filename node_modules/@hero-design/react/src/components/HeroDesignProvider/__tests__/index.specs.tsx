import React, { useState } from 'react';

import { waitFor } from '@testing-library/react';
import renderWithTheme from '../../../testUtils/renderWithTheme';
import HeroDesignProvider from '..';
import viVN from '../../../locales/vi_VN';
import DoubleCalendar from '../../DatePicker/Calendar/DoubleCalendar';
import Input from '../../Input';
import createFilters from '../../Table/Filters/createFilters';

type FilterTypes = {
  a?: string;
  b?: string;
  c?: string;
  d?: string;
  e?: string;
};

const { Filters, Filter } = createFilters<FilterTypes>();

const ExampleFilters = () => {
  const renderInput = ({
    value,
    onChange,
  }: {
    value?: string;
    onChange: (v?: string) => void;
  }) => <Input value={value} onChange={(e) => onChange(e.target.value)} />;
  const [filterValues, setFilterValues] = useState<FilterTypes>({});
  return (
    <Filters value={filterValues} onChange={setFilterValues}>
      <Filter icon="search-outlined" noCaret filterKey="a">
        {renderInput}
      </Filter>
      <Filter icon="search-outlined" noCaret filterKey="b">
        {renderInput}
      </Filter>
      <Filter icon="search-outlined" noCaret filterKey="c">
        {renderInput}
      </Filter>
      <Filter icon="search-outlined" noCaret filterKey="d">
        {renderInput}
      </Filter>
      <Filter icon="search-outlined" noCaret filterKey="e">
        {renderInput}
      </Filter>
    </Filters>
  );
};

describe('HeroDesignProvider', () => {
  it('should render correctly', async () => {
    const { getByText } = renderWithTheme(
      <HeroDesignProvider locale={viVN}>
        <ExampleFilters />
      </HeroDesignProvider>
    );

    expect(getByText('ThÃªm')).toBeInTheDocument();
  });

  it('renders double calendar in VN locale', async () => {
    const { getAllByText, getByTestId } = renderWithTheme(
      <HeroDesignProvider locale={viVN}>
        <DoubleCalendar
          startDate={new Date(2021, 1, 19)}
          endDate={new Date(2021, 1, 25)}
          minDate={new Date(2021, 1, 1)}
          maxDate={new Date(2021, 1, 26)}
          dateClickCount={0}
          isSettingStartDate={false}
          isSettingEndDate={false}
        />
      </HeroDesignProvider>
    );

    await waitFor(() => {
      const firstMonthSelect = getByTestId('first-month-select');
      const firstYearSelect = getByTestId('first-year-select');
      const secondMonthSelect = getByTestId('second-month-select');
      const secondYearSelect = getByTestId('second-year-select');

      expect(firstMonthSelect).toSelectItem('Thg 2');
      expect(firstYearSelect).toSelectItem('2021');
      expect(secondMonthSelect).toSelectItem('Thg 3');
      expect(secondYearSelect).toSelectItem('2021');

      // shows days of week
      expect(getAllByText('CN').length).toBe(2);
      expect(getAllByText('Th 2').length).toBe(2);
      expect(getAllByText('Th 3').length).toBe(2);
      expect(getAllByText('Th 4').length).toBe(2);
      expect(getAllByText('Th 5').length).toBe(2);
      expect(getAllByText('Th 6').length).toBe(2);
      expect(getAllByText('Th 7').length).toBe(2);
    });
  });
});
