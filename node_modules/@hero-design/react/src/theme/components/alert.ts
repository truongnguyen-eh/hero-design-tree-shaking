import type { GlobalTheme } from '../global';

const getAlertTheme = (theme: GlobalTheme) => {
  const space = {
    iconDefaultMarginTop: `${theme.space.xxsmall}px`,
    iconDefaultMarginRight: `${theme.space.medium}px`,
    iconCompactMarginTop: `${theme.space.xsmall}px`,
    iconCompactMarginRight: `${theme.space.small}px`,
    defaultPadding: `${theme.space.medium}px`,
    compactPadding: `${theme.space.small}px ${theme.space.medium}px`,
    titleMarginBottom: `${theme.space.xsmall}px`,
  };

  const fontSizes = {
    title: `${theme.fontSizes.large}px`,
    content: `${theme.fontSizes.medium}px`,
  };

  const lineHeights = {
    title: `${theme.lineHeights.large}px`,
    content: `${theme.lineHeights.medium}px`,
    iconDefault: `${theme.lineHeights.large}px`,
    iconCompact: `${theme.lineHeights.medium}px`,
  };

  const fontWeights = {
    text: theme.fontWeights.regular,
    title: theme.fontWeights.semiBold,
  };

  const borderWidths = {
    wrapper: `${theme.borderWidths.base}px`,
  };

  const radii = {
    wrapper: `${theme.radii.base}px`,
  };

  const colors = {
    text: theme.colors.text,
    bgSuccess: theme.colors.successBackground,
    bgInfo: theme.colors.infoBackground,
    bgWarning: theme.colors.warningBackground,
    bgDanger: theme.colors.dangerBackground,
    bgError: theme.colors.errorBackground,
    borderSuccess: theme.colors.success,
    borderInfo: theme.colors.infoBorder,
    borderWarning: theme.colors.warning,
    borderDanger: theme.colors.danger,
    borderError: theme.colors.error,
    textInfo: theme.colors.text,
    textSuccess: theme.colors.text,
    textWarning: theme.colors.text,
    textDanger: theme.colors.text,
    textError: theme.colors.text,
  };

  return {
    space,
    fontSizes,
    lineHeights,
    fontWeights,
    borderWidths,
    radii,
    colors,
  };
};

type AlertTheme = ReturnType<typeof getAlertTheme>;

export { getAlertTheme };
export type { AlertTheme };
