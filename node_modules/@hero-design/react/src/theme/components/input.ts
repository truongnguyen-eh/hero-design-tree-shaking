import type { GlobalTheme } from '../global';

const getInputTheme = (theme: GlobalTheme) => {
  const space = {
    smallPadding: `${theme.space.xsmall}px`,
    mediumPadding: `${theme.space.small}px`,
    largePadding: `${theme.space.small}px`,
    tagMargin: `${theme.space.xsmall}px`,
  };

  const fontSizes = {
    small: `${theme.fontSizes.small}px`,
    medium: `${theme.fontSizes.medium}px`,
    large: `${theme.fontSizes.large}px`,
  };

  const lineHeights = {
    small: `${theme.lineHeights.small}px`,
    medium: `${theme.lineHeights.medium}px`,
    large: `${theme.lineHeights.large}px`,
  };

  const fontWeights = {
    default: theme.fontWeights.regular,
  };

  const sizes = {
    small: `${theme.sizes.large}px`,
    medium: `${theme.sizes.xlarge}px`,
    large: `${theme.sizes.xxlarge}px`,
    textAreaSmall: `${
      (theme.borderWidths.base + theme.space.xsmall + theme.lineHeights.large) *
      2
    }px`,
    textAreaMedium: `${
      (theme.borderWidths.base + theme.space.small + theme.lineHeights.medium) *
      2
    }px`,
    textAreaLarge: `${
      (theme.borderWidths.base + theme.space.small + theme.lineHeights.small) *
      2
    }px`,
    tagInputMinWidth: `${theme.sizes.xxxlarge}px`,
  };

  const borderWidths = {
    default: `${theme.borderWidths.base}px`,
  };

  const radii = {
    default: `${theme.radii.base}px`,
  };

  const colors = {
    text: theme.colors.text,
    disabledText: theme.colors.subduedText,
    placeholder: theme.colors.subduedText,
    border: theme.colors.defaultBorder,
    focusBorder: theme.colors.primary,
    background: theme.colors.defaultLightBackground,
    disabledBackground: theme.colors.defaultBackground,
    invalidBorder: theme.colors.danger,
    tagBackground: theme.colors.defaultGreyBackground,
  };

  const shadows = {
    focus: theme.shadows.primary,
    invalidFocus: theme.shadows.danger,
  };

  return {
    space,
    fontSizes,
    lineHeights,
    fontWeights,
    sizes,
    borderWidths,
    radii,
    colors,
    shadows,
  };
};

type InputTheme = ReturnType<typeof getInputTheme>;

export { getInputTheme };
export type { InputTheme };
