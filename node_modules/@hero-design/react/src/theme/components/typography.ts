import type { GlobalTheme } from '../global';

const getTypographyTheme = (theme: GlobalTheme) => {
  const colors = {
    main: theme.colors.text,
    body: theme.colors.bodyText,
    subdued: theme.colors.subduedText,
    disabled: theme.colors.disabledText,
    primary: theme.colors.primary,
    success: theme.colors.success,
    danger: theme.colors.danger,
    warning: theme.colors.warning,
    error: theme.colors.error,
    white: theme.colors.lightText,
    nestedLink: theme.colors.primary,
    hoverNestedLink: theme.colors.hoverPrimary,
  };

  const fontWeights = {
    light: theme.fontWeights.light,
    regular: theme.fontWeights.regular,
    semiBold: theme.fontWeights.semiBold,
    bold: theme.fontWeights.bold,
    nestedStrongTag: theme.fontWeights.semiBold,
  };

  const fontSizes = {
    xxxxxlarge: `${theme.fontSizes.xxxxxlarge}px`,
    xxxxlarge: `${theme.fontSizes.xxxxlarge}px`,
    xxxlarge: `${theme.fontSizes.xxxlarge}px`,
    xxlarge: `${theme.fontSizes.xxlarge}px`,
    xlarge: `${theme.fontSizes.xlarge}px`,
    large: `${theme.fontSizes.large}px`,
    medium: `${theme.fontSizes.medium}px`,
    small: `${theme.fontSizes.small}px`,
    xsmall: `${theme.fontSizes.xsmall}px`,
  };

  const lineHeights = {
    xxxxxlarge: `${theme.lineHeights.xxxxxlarge}px`,
    xxxxlarge: `${theme.lineHeights.xxxxlarge}px`,
    xxxlarge: `${theme.lineHeights.xxxlarge}px`,
    xxlarge: `${theme.lineHeights.xxlarge}px`,
    xlarge: `${theme.lineHeights.xlarge}px`,
    large: `${theme.lineHeights.large}px`,
    medium: `${theme.lineHeights.medium}px`,
    small: `${theme.lineHeights.small}px`,
    xsmall: `${theme.lineHeights.xsmall}px`,
  };

  const space = {
    nestedUnorderedListPaddingLeft: `${theme.space.large}px`,
  };

  return { colors, fontWeights, fontSizes, lineHeights, space };
};

type TypographyTheme = ReturnType<typeof getTypographyTheme>;

export { getTypographyTheme };
export type { TypographyTheme };
