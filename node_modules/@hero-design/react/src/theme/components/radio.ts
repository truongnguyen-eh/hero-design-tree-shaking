import type { GlobalTheme } from '../global';

const getRadioTheme = (theme: GlobalTheme) => {
  const sizes = {
    height: `${theme.sizes.medium}px`,
    width: `${theme.sizes.medium}px`,
    checkmarkHeight: `${theme.sizes.small}px`,
    checkmarkWidth: `${theme.sizes.small}px`,
    buttonSmall: `${theme.sizes.large}px`,
    buttonMedium: `${theme.sizes.xlarge}px`,
    buttonLarge: `${theme.sizes.xxxlarge}px`,
    buttonGroupSmallWidth: `calc(100% + ${theme.space.xsmall}px)`,
    buttonGroupMediumWidth: `calc(100% + ${theme.space.small}px)`,
    buttonGroupLargeWidth: `calc(100% + ${theme.space.small}px)`,
  };

  const colors = {
    primary: theme.colors.primary,
    hoverPrimary: theme.colors.hoverPrimary,
    danger: theme.colors.danger,
    hoverDanger: theme.colors.hoverDanger,
    success: theme.colors.success,
    hoverSuccess: theme.colors.hoverSuccess,
    warning: theme.colors.warning,
    hoverWarning: theme.colors.hoverWarning,
    error: theme.colors.error,
    hoverError: theme.colors.hoverError,
    defaultBorder: theme.colors.defaultBorder,
    disabledBorder: theme.colors.defaultBorder,
    hoverBorder: theme.colors.primary,
    activeBorder: theme.colors.primary,
    defaultText: theme.colors.text,
    hoverText: theme.colors.primary,
    disabledText: theme.colors.disabledText,
    disabledSelectedText: theme.colors.lightText,
    enabledSelectedText: theme.colors.lightText,
    defaultCheckmark: theme.colors.primary,
    disabledCheckmark: theme.colors.neutralDarkBackground,
    disabledBackground: theme.colors.defaultBackground,
    buttonDisabledBackground: theme.colors.defaultBackground,
    buttonCheckedBackground: theme.colors.primary,
    buttonDisabledCheckedBackground: theme.colors.neutralBackground,
  };

  const radii = {
    default: '50%',
    button: `${theme.radii.base}px`,
  };

  const borderWidths = {
    default: `${theme.borderWidths.base}px`,
  };

  const space = {
    margin: `0 ${theme.space.small}px 0 0`,
    groupVerticalMargin: `${theme.space.small}px`,
    groupHorizontalMargin: `${theme.space.medium}px`,
    buttonSmallPadding: `${theme.space.xsmall}px ${theme.space.small}px`,
    buttonMediumPadding: `${theme.space.small}px ${theme.space.medium}px`,
    buttonLargePadding: `${theme.space.small}px ${theme.space.medium}px`,
    buttonGroupSmallMargin: `-${theme.space.xsmall}px 0 0 -${theme.space.xsmall}px`,
    buttonGroupMediumMargin: `-${theme.space.small}px 0 0 -${theme.space.small}px`,
    buttonGroupLargeMargin: `-${theme.space.small}px 0 0 -${theme.space.small}px`,
    buttonSmallMargin: `${theme.space.xsmall}px 0 0 ${theme.space.xsmall}px`,
    buttonMediumMargin: `${theme.space.small}px 0 0 ${theme.space.small}px`,
    buttonLargeMargin: `${theme.space.small}px 0 0 ${theme.space.small}px`,
  };

  const fontSizes = {
    default: `${theme.fontSizes.medium}px`,
    buttonSmall: `${theme.fontSizes.small}px`,
    buttonMedium: `${theme.fontSizes.medium}px`,
    buttonLarge: `${theme.fontSizes.xlarge}px`,
  };

  const lineHeights = {
    default: `${theme.lineHeights.medium}px`,
  };

  const fontWeights = {
    default: theme.fontWeights.regular,
  };

  return {
    sizes,
    colors,
    radii,
    borderWidths,
    space,
    fontSizes,
    lineHeights,
    fontWeights,
  };
};

type RadioTheme = ReturnType<typeof getRadioTheme>;

export { getRadioTheme };
export type { RadioTheme };
