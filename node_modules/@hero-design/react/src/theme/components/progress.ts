import type { GlobalTheme } from '../global';

const getProgressTheme = (theme: GlobalTheme) => {
  const colors = {
    circleText: {
      primary: theme.colors.bodyText,
      warning: theme.colors.bodyText,
      danger: theme.colors.bodyText,
      success: theme.colors.bodyText,
      error: theme.colors.bodyText,
      archived: theme.colors.bodyText,
    },
    progress: {
      background: theme.colors.neutralLightBackground,
      primary: theme.colors.primary,
      warning: theme.colors.warning,
      danger: theme.colors.danger,
      success: theme.colors.success,
      error: theme.colors.error,
      archived: theme.colors.disabledText,
    },
    text: theme.colors.bodyText,
    background: theme.colors.neutralLightBackground,
    success: theme.colors.success,
    danger: theme.colors.danger,
    primary: theme.colors.primary,
    warning: theme.colors.warning,
    error: theme.colors.error,
    archived: theme.colors.disabledText,
  };

  const fontSizes = {
    barSmall: `${theme.fontSizes.xsmall}px`,
    barMedium: `${theme.fontSizes.small}px`,
    circleSmall: `${theme.fontSizes.large}px`,
    circleMedium: `${theme.fontSizes.xxxlarge}px`,
    circleLarge: `${theme.fontSizes['7xlarge']}px`,
  };

  const fontWeights = {
    default: theme.fontWeights.regular,
  };

  const lineHeights = {
    barSmall: `${theme.lineHeights.xsmall}px`,
    barMedium: `${theme.lineHeights.small}px`,
  };

  const space = {
    barTextPadding: `${theme.space.small}px`,
    barTextLeft: `${theme.space.medium}px`,
    barTextMargin: `${theme.space.xsmall}px`,
  };

  const sizes = {
    barWrapperSmall: lineHeights.barSmall,
    barWrapperMedium: lineHeights.barMedium,
    barSmall: `${theme.sizes.xsmall}px`,
    barMedium: `${theme.sizes.small}px`,
    barTextWidth: `${theme.sizes.xlarge}px`,
    circleSmall: '64px',
    circleMedium: '112px',
    circleLarge: '176px',
    circleSmallStroke: `${theme.sizes.xsmall}px`,
    circleMediumStroke: `${theme.sizes.small}px`,
    circleLargeStroke: `${theme.sizes.small}px`,
    markerSmallShortDim: '2px',
    markerMediumShortDim: '4px',
    markerSmallLongDim: '10px',
    markerMediumLongDim: '14px',
  };

  const radii = {
    bar: `${theme.radii.base}px`,
  };

  return { colors, fontSizes, fontWeights, lineHeights, space, sizes, radii };
};

type ProgressTheme = ReturnType<typeof getProgressTheme>;

export { getProgressTheme };
export type { ProgressTheme };
