import type { GlobalTheme } from '../global';

const getCheckboxTheme = (theme: GlobalTheme) => {
  const colors = {
    text: theme.colors.text,
    disabledText: theme.colors.disabledText,
    defaultBorder: theme.colors.disabledText,
    checkedBorder: theme.colors.primary,
    defaultBackground: theme.colors.defaultLightBackground,
    checkedBackground: theme.colors.primary,
    disabledBackground: theme.colors.defaultBackground,
    defaultCheckmark: theme.colors.lightText,
    disabledCheckmark: theme.colors.disabledText,
    indeterminateBoxBackground: theme.colors.primary,
    buttonText: theme.colors.text,
    buttonDefaultBorder: theme.colors.defaultBorder,
    buttonHover: theme.colors.activePrimary,
    buttonDisabledText: theme.colors.disabledText,
    buttonDisabledBackground: theme.colors.defaultBackground,
    buttonSelectedText: theme.colors.lightText,
    buttonSelectedBackground: theme.colors.primary,
    buttonDisabledSelectedText: theme.colors.lightText,
    buttonDisabledSelectedBackground: theme.colors.neutralBackground,
  };

  const space = {
    labelPaddingLeft: `${theme.space.large}px`,
    top: `${(theme.lineHeights.medium - theme.sizes.medium) / 2}px`,
    markTop: `${theme.sizes.medium / 2}px`,
    markLeft: `${theme.sizes.medium / 2}px`,
    marginTop: `${theme.sizes.small}px`,
    marginLeft: `${theme.sizes.large}px`,
    indeterminateBoxTop: `${
      (theme.lineHeights.medium - theme.sizes.small) / 2
    }px`,
    indeterminateBoxLeft: `${theme.sizes.small / 2}px`,
    buttonSmallPadding: `${theme.space.xsmall}px ${theme.space.small}px`,
    buttonMediumPadding: `${theme.space.small}px ${theme.space.medium}px`,
    buttonLargePadding: `${theme.space.small}px ${theme.space.medium}px`,
    buttonSmallMargin: `${theme.space.xsmall}px 0 0 ${theme.space.xsmall}px`,
    buttonMediumMargin: `${theme.space.small}px 0 0 ${theme.space.small}px`,
    buttonLargeMargin: `${theme.space.small}px 0 0 ${theme.space.small}px`,
    buttonGroupSmallMargin: `-${theme.space.xsmall}px 0 0 -${theme.space.xsmall}px`,
    buttonGroupMediumMargin: `-${theme.space.small}px 0 0 -${theme.space.small}px`,
    buttonGroupLargeMargin: `-${theme.space.small}px 0 0 -${theme.space.small}px`,
  };

  const sizes = {
    height: `${theme.sizes.medium}px`,
    width: `${theme.sizes.medium}px`,
    markHeight: `${theme.sizes.small}px`,
    markWidth: `${theme.sizes.xsmall}px`,
    indeterminateBoxHeight: `${theme.sizes.small}px`,
    indeterminateBoxWidth: `${theme.sizes.small}px`,
    buttonSmall: `${theme.sizes.large}px`,
    buttonMedium: `${theme.sizes.xlarge}px`,
    buttonLarge: `${theme.sizes.xxxlarge}px`,
    buttonGroupSmallWidth: `calc(100% + ${theme.space.xsmall}px)`,
    buttonGroupMediumWidth: `calc(100% + ${theme.space.small}px)`,
    buttonGroupLargeWidth: `calc(100% + ${theme.space.small}px)`,
  };

  const borderWidths = {
    default: `${theme.borderWidths.base}px`,
  };

  const radii = {
    default: `${theme.radii.base}px`,
    indeterminateBox: `${theme.radii.base / 2}px`,
  };

  const fontSizes = {
    default: `${theme.fontSizes.medium}px`,
    buttonsmall: `${theme.fontSizes.small}px`,
    buttonMedium: `${theme.fontSizes.medium}px`,
    buttonLarge: `${theme.fontSizes.xlarge}px`,
  };

  const lineHeights = {
    default: `${theme.lineHeights.medium}px`,
  };

  const fontWeights = {
    default: theme.fontWeights.regular,
  };

  return {
    colors,
    space,
    sizes,
    borderWidths,
    radii,
    fontSizes,
    lineHeights,
    fontWeights,
  };
};

type CheckboxTheme = ReturnType<typeof getCheckboxTheme>;

export { getCheckboxTheme };
export type { CheckboxTheme };
