import type { GlobalTheme } from '../global';

const getBannerTheme = (theme: GlobalTheme) => {
  const space = {
    iconDefaultMarginTop: `${theme.space.xxsmall}px`,
    iconCompactMarginTop: `${theme.space.xsmall}px`,
    iconDefaultMarginRight: `${theme.space.medium}px`,
    iconCompactMarginRight: `${theme.space.small}px`,
    titleMarginBottom: `${theme.space.xsmall}px`,
    defaultPadding: `${theme.space.medium}px`,
    compactPadding: `${theme.space.small}px ${theme.space.medium}px`,
  };

  const fontSizes = {
    title: `${theme.fontSizes.large}px`,
    content: `${theme.fontSizes.medium}px`,
  };

  const lineHeights = {
    title: `${theme.lineHeights.large}px`,
    content: `${theme.lineHeights.medium}px`,
    iconDefault: `${theme.lineHeights.large}px`,
    iconCompact: `${theme.lineHeights.medium}px`,
  };

  const fontWeights = {
    text: theme.fontWeights.regular,
    title: theme.fontWeights.semiBold,
  };

  const colors = {
    bgInfo: theme.colors.infoDarkBackground,
    bgSuccess: theme.colors.successDarkBackground,
    bgWarning: theme.colors.warningDarkBackground,
    bgDanger: theme.colors.dangerDarkBackground,
    bgError: theme.colors.errorDarkBackground,
    success: theme.colors.successDark,
    info: theme.colors.info,
    warning: theme.colors.warningDark,
    danger: theme.colors.dangerDark,
    error: theme.colors.errorDark,
    textInfo: theme.colors.text,
    textSuccess: theme.colors.text,
    textWarning: theme.colors.text,
    textDanger: theme.colors.text,
    textError: theme.colors.text,
    borderInfo: theme.colors.infoDarkBackground,
    borderSuccess: theme.colors.successDarkBackground,
    borderWarning: theme.colors.warningDarkBackground,
    borderDanger: theme.colors.dangerDarkBackground,
    borderError: theme.colors.errorDarkBackground,
    closeButton: theme.colors.text,
  };

  const borderWidths = {
    default: 0,
  };

  const radii = {
    default: 0,
  };

  return {
    space,
    fontSizes,
    lineHeights,
    fontWeights,
    colors,
    radii,
    borderWidths,
  };
};

type BannerTheme = ReturnType<typeof getBannerTheme>;

export { getBannerTheme };
export type { BannerTheme };
