import type { GlobalTheme } from '../global';

const getTableTheme = (theme: GlobalTheme) => {
  const sizes = {
    expandableIcon: `${theme.sizes.medium}px`,
    itemsPerPageInputWidth: '65px',
    columnDividerWidth: '20px',
    filterButton: `${theme.sizes.xlarge}px`,
    filterDropdownWidth: `300px`,
  };

  const colors = {
    background: theme.colors.defaultLightBackground,
    headerText: theme.colors.text,
    headerBackground: theme.colors.primaryHeaderBackground,
    rowFocusBackground: theme.colors.defaultGreyBackground,
    cellText: theme.colors.text,
    cellBorder: theme.colors.defaultBorder,
    expandableIconBorder: theme.colors.defaultBorder,
    emptyText: theme.colors.subduedText,
    filterButtonBackground: theme.colors.defaultLightBackground,
    filterButtonBorder: theme.colors.defaultBorder,
    filterButtonHoverBorder: theme.colors.black,
    filterButtonActiveBackground: theme.colors.palette.smaltLight75,
    filterButtonActiveBorder: theme.colors.black,
    filterLabelText: theme.colors.subduedText,
    generalBorder: theme.colors.defaultBorder,
    headerBorder: theme.colors.defaultBorder,
    rowBorder: theme.colors.defaultBorder,
  };

  const space = {
    headerPadding: `${theme.space.medium}px`,
    cellPadding: `${theme.space.medium}px`,
    sortingIconMarginLeft: `${theme.space.small}px`,
    expandableIconPadding: `${theme.space.xxsmall}px`,
    paginationMarginTop: `${theme.space.medium}px`,
    emptyContentMargin: `${theme.space.large}px`,
    emptyContentPadding: `${theme.space.large}px`,
    filterButtonMarginRight: `${theme.space.small}px`,
    filterButtonMarginBottom: `${theme.space.small}px`,
    filterButtonPadding: `${theme.space.small}px ${theme.space.medium}px`,
    filterButtonIconPadding: `${theme.space.small}px`,
    filterDropdownPadding: `${theme.space.medium}px`,
    filterLabelContentPadding: `${theme.space.xsmall}px`,
  };

  const fontSizes = {
    header: `${theme.fontSizes.medium}px`,
    cell: `${theme.fontSizes.medium}px`,
    sortingIcon: `${theme.fontSizes.xsmall}px`,
    expandableIcon: `${theme.fontSizes.xsmall}px`,
    filterButton: `${theme.fontSizes.medium}px`,
  };

  const fontWeights = {
    header: theme.fontWeights.semiBold,
    cell: theme.fontWeights.regular,
    filterButton: theme.fontWeights.semiBold,
    filterLabel: theme.fontWeights.semiBold,
    filterBy: theme.fontWeights.semiBold,
  };

  const lineHeights = {
    header: `${theme.lineHeights.medium}px`,
    cell: `${theme.lineHeights.medium}px`,
    sortingIcon: `${theme.lineHeights.xsmall}px`,
    filterButton: `${theme.lineHeights.medium}px`,
  };

  const borderWidths = {
    row: `${theme.borderWidths.base}px`,
    expandableIcon: `${theme.borderWidths.base}px`,
    filterButton: `${theme.borderWidths.base}px`,
    general: `0px`,
    header: `${theme.borderWidths.base}px`,
    cell: `0px`,
  };

  const radii = {
    expandableIcon: `${theme.radii.base}px`,
    header: `${theme.radii.base}px`,
    filterButton: `6px`,
  };

  const shadows = {
    columnDivider: `${theme.shadows.divider}`,
  };

  return {
    sizes,
    colors,
    space,
    fontSizes,
    fontWeights,
    lineHeights,
    borderWidths,
    radii,
    shadows,
  };
};

type TableTheme = ReturnType<typeof getTableTheme>;

export { getTableTheme };
export type { TableTheme };
