import type { GlobalTheme } from '../global';

const getDatePickerTheme = (theme: GlobalTheme) => {
  const colors = {
    text: theme.colors.text,
    disabledText: theme.colors.subduedText,
    selectedText: theme.colors.lightText,
    todayText: theme.colors.primary,
    hoverBackground: theme.colors.primaryLightBackground,
    selectedBackground: theme.colors.primary,
    todayBorder: theme.colors.primary,
    inRangeBackground: theme.colors.primaryLightBackground,
    inRangeHoverBackground: theme.colors.hoverPrimary,
    inRangeHoverText: theme.colors.lightText,
    rangeBorder: theme.colors.defaultBorder,
    rangeFocusBorder: theme.colors.primary,
    rangeFocusBar: theme.colors.primary,
    invalidBorder: theme.colors.danger,
    invalidRangeFocusBar: theme.colors.danger,
  };

  const space = {
    navigationPadding: `${theme.space.medium}px ${theme.space.medium}px ${theme.space.xsmall}px`,
    monthYearPadding: `0 ${theme.space.xsmall}px`,
    calendarPadding: `${theme.space.small}px`,
    dayMargin: `${theme.space.xsmall}px 0`,
    dayPadding: ` 0 ${theme.space.small}px`,
    monthPadding: `${theme.space.xxsmall}px 0`,
    monthMargin: `${theme.space.xsmall}px ${theme.space.small}px`,
    monthSelectedPadding: `0px ${theme.space.small}px`,
    monthSelectedMargin: `${theme.space.xsmall}px 0px`,
  };

  const sizes = {
    month: '210px',
    monthYear: '100px',
    day: `${theme.sizes.large}px`,
    rangeFocusBar: `${theme.sizes.xxsmall}px`,
    fortnightlyWidth: '150px',
    singleSelectWidth: '150px',
  };

  const fontSizes = {
    day: `${theme.fontSizes.medium}px`,
    month: `${theme.fontSizes.medium}px`,
  };

  const fontWeights = {
    day: theme.fontWeights.regular,
    month: theme.fontWeights.regular,
    selectedDay: theme.fontWeights.bold,
    selectedMonth: theme.fontWeights.bold,
  };

  const lineHeights = {
    day: `${theme.lineHeights.medium}px`,
    month: `${theme.lineHeights.medium}px`,
  };

  const borderWidths = {
    range: `${theme.borderWidths.base}px`,
    day: `${theme.borderWidths.base}px`,
    month: `${theme.borderWidths.base}px`,
  };

  const radii = {
    day: `${theme.radii.base}px`,
    month: `${theme.radii.base}px`,
    range: `${theme.radii.base}px`,
  };

  const shadows = {
    dropdown: theme.shadows.default,
    range: theme.shadows.primary,
    invalidFocus: theme.shadows.danger,
  };

  return {
    colors,
    space,
    sizes,
    fontSizes,
    fontWeights,
    lineHeights,
    borderWidths,
    radii,
    shadows,
  };
};

type DatePickerTheme = ReturnType<typeof getDatePickerTheme>;

export { getDatePickerTheme };
export type { DatePickerTheme };
