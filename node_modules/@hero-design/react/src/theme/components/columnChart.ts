import type { GlobalTheme } from '../global';

const getColumnChartTheme = (theme: GlobalTheme) => {
  const colors = {
    xAxisTickColor: theme.colors.subduedText,
    yAxisTickColor: theme.colors.subduedText,
    verticalTitleFillColor: theme.colors.subduedText,
    gridLineBackgroundColor: theme.colors.neutralBackground,
    tooltipBackgroundColor: theme.colors.defaultLightBackground,
    totalBackgroundColor: theme.colors.defaultLightBackground,
  };

  const radii = {
    tooltip: theme.radii.base,
    bar: {
      large: theme.radii.base * 2,
      medium: theme.radii.base,
      inactive: theme.radii.base,
    },
    tooltipArrow: theme.radii.base / 2,
    totalRect: theme.radii.base * 3,
  };

  const borderWidth = {
    totalRect: theme.borderWidths.base,
  };

  const sizes = {
    tooltipArrow: theme.sizes.small,
    barWidth: {
      large: theme.sizes.xsmall * 3,
      medium: theme.sizes.small,
      inactive: theme.sizes.xsmall,
    },
    verticalTitleY: -theme.sizes.xlarge * 2,
    navigationButton: theme.sizes.large,
    totalSvgHeight: theme.sizes.large,
    totalLetterWidth: theme.sizes.small,
  };

  const space = {
    tooltipPadding: theme.space.small,
    tooltipChildMargin: theme.space.small,
    legendContainerMarginTop: theme.space.small,
    legendContainerChildMarginBottom: theme.space.small,
    legendBoxGap: theme.space.medium,
    columnChartMarginTop: theme.space.medium,
    columnChartMarginRight: theme.space.large,
    columnChartMarginBottom: theme.space.medium,
    columnChartMarginLeft: theme.space.xxxxlarge + theme.space.large,
    columnChartMarginLeftWithNavigation: theme.space.large * 2,
    xAxisTransform: theme.space.xsmall,
    xAxisLabelHorizontalPadding: theme.space.small,
    yAxisTransform: -theme.space.xsmall,
    barHoverTransform: {
      large: theme.space.xsmall,
      medium: theme.space.xxsmall,
    },
    barMarginTop: theme.space.xsmall,
    moreTooltipPadding: theme.space.small,
    totalSvgHorizontalPadding: theme.space.small,
    chartContentMarginLeft: theme.space.xlarge,
    navigationButtonMarginLeft: theme.space.small,
  };

  const fontWeights = {
    verticalTitle: theme.fontWeights.regular,
    xAxisTick: theme.fontWeights.regular,
    totalText: theme.fontWeights.semiBold,
    yAxisTick: theme.fontWeights.regular,
  };

  const fontSizes = {
    yAxisTick: `${theme.fontSizes.xsmall}px`,
    verticalTitle: `${theme.fontSizes.small}px`,
    xAxisTick: `${theme.fontSizes.xsmall}px`,
    totalText: `${theme.fontSizes.xsmall}px`,
  };

  const lineHeights = {
    xAxisTick: `${theme.lineHeights.xsmall}px`,
    yAxisTick: `${theme.lineHeights.xsmall}px`,
    verticalTitle: `${theme.lineHeights.small}px`,
  };

  const boxShadows = {
    tooltip: '0 0 10px 0 rgba(0, 0, 0, 0.2)',
    barDropShadow: '1px 1px 4px rgb(0 0 0 / 0.3)',
  };

  return {
    colors,
    radii,
    space,
    fontWeights,
    fontSizes,
    lineHeights,
    boxShadows,
    sizes,
    borderWidth,
  };
};

type ColumnChartTheme = ReturnType<typeof getColumnChartTheme>;

export { getColumnChartTheme };
export type { ColumnChartTheme };
