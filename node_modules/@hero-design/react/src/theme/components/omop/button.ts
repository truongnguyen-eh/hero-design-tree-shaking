import type { DeepPartial } from '../../../fp/Object';
import type { GlobalTheme } from '../../global';
import { getButtonTheme as getButtonHeroTheme } from '../button';

type ButtonHeroTheme = ReturnType<typeof getButtonHeroTheme>;
type OmopColors = DeepPartial<ButtonHeroTheme['colors']>;

const getButtonTheme = (theme: GlobalTheme): ButtonHeroTheme => {
  const heroTheme = getButtonHeroTheme(theme);

  const omopColors: OmopColors = {
    text: {
      filledPrimary: theme.colors.primary,
      hoverPrimary: theme.colors.palette.violetDark60,
      activePrimary: theme.colors.primary,
      loadingPrimary: theme.colors.primary,
      disabledText: theme.colors.subduedText,
    },
    background: {
      primary: theme.colors.primaryLightBackground,
      hoverPrimary: theme.colors.defaultBackground,
      activePrimary: theme.colors.primaryBackground,
      loadingPrimary: theme.colors.primaryBackground,
      disabledBackground: theme.colors.neutralLightBackground,
    },
  };

  return {
    ...heroTheme,
    colors: {
      ...heroTheme.colors,
      ...omopColors,
      text: {
        ...heroTheme.colors.text,
        ...omopColors.text,
      },
      background: {
        ...heroTheme.colors.background,
        ...omopColors.background,
      },
    },
  };
};

export { getButtonTheme };
