import type { DeepPartial } from '../../../fp/Object';
import type { GlobalTheme } from '../../global';
import { getProgressTheme as getProgressEmptyTheme } from '../progress';

type ProgressHeroTheme = ReturnType<typeof getProgressEmptyTheme>;
type OmopColors = DeepPartial<ProgressHeroTheme['colors']>;

const getProgressTheme = (theme: GlobalTheme): ProgressHeroTheme => {
  const heroTheme = getProgressEmptyTheme(theme);

  const omopColors: OmopColors = {
    circleText: {
      primary: theme.colors.palette.violetDark30,
      warning: theme.colors.palette.orangeDark30,
      danger: theme.colors.palette.redDark30,
      success: theme.colors.palette.green,
      error: theme.colors.palette.pinkDark30,
      archived: theme.colors.palette.greyDark45,
    },
    progress: {
      background: theme.colors.defaultBackground,
      primary: theme.colors.primary,
      warning: theme.colors.warning,
      danger: theme.colors.danger,
      success: theme.colors.palette.green,
      error: theme.colors.error,
      archived: theme.colors.neutralBackground,
    },
  };

  return {
    ...heroTheme,
    colors: {
      ...heroTheme.colors,
      ...omopColors,
      circleText: {
        ...heroTheme.colors.circleText,
        ...omopColors.circleText,
      },
      progress: {
        ...heroTheme.colors.progress,
        ...omopColors.progress,
      },
    },
  };
};

export { getProgressTheme };
