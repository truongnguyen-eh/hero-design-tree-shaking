import type { GlobalTheme } from '../global';

const getHorizontalBarChart = (theme: GlobalTheme) => {
  const colors = {
    yAxisTickColor: theme.colors.subduedText,
    xAxisTickColor: theme.colors.subduedText,
    gridLineBackgroundColor: theme.colors.neutralBackground,
    verticalTitleFillColor: theme.colors.subduedText,
    totalBackgroundColor: theme.colors.defaultLightBackground,
    tooltipBackgroundColor: theme.colors.defaultLightBackground,
  };

  const radii = {
    tooltip: theme.radii.medium,
    tooltipArrow: theme.radii.base / 2,
    bar: {
      large: theme.radii.base * 2,
      medium: theme.radii.base * 2,
      inactive: theme.radii.base,
    },
    totalRect: theme.radii.base * 3,
  };

  const sizes = {
    tooltipArrow: theme.sizes.small,
    barHeight: {
      large: theme.sizes.xsmall * 3,
      medium: theme.sizes.small,
      inactive: theme.sizes.xsmall,
    },
    totalSvgHeight: theme.sizes.large,
    navigationButton: theme.sizes.large,
    totalLetterWidth: theme.sizes.small,
  };

  const space = {
    tooltipChildMargin: theme.space.small,
    tooltipPadding: theme.space.small,
    legendContainerMarginTop: theme.space.medium,
    legendContainerChildMarginBottom: theme.space.small,
    horizontalBarChartMarginTop: theme.space.medium,
    legendBoxGap: theme.space.medium,
    horizontalBarChartMarginRight: theme.space.large,
    horizontalBarChartMarginBottom: theme.space.xlarge,
    horizontalBarChartMarginLeft: theme.space.xxxlarge * 2,
    horizontalBarChartMarginLeftWithNavigation: theme.space.large * 2,
    yAxisTransformHorizontal: -theme.space.small,
    xAxisTransform: theme.space.medium,
    barHoverTransform: {
      large: theme.space.xsmall,
      medium: theme.space.xxsmall,
    },
    horizontalBarMarginLeft: theme.space.xsmall,
    tooltipTop: 50,
    moreTooltipPadding: theme.space.small,
    navigateLeftPosition: 0,
    navigateLeftPositionHasTitle: theme.space.xxxlarge,
    verticalTitleY: -theme.sizes.xlarge * 2,
    navigateRightPosition: theme.space.medium,
    gridChartMarginTop: theme.space.small,
    horizontalBarMarginTop: theme.space.xsmall,
    totalSvgHorizontalPadding: theme.space.small,
  };

  const fontWeights = {
    xAxisTick: theme.fontWeights.regular,
    verticalTitle: theme.fontWeights.regular,
    totalText: theme.fontWeights.semiBold,
    yAxisTick: theme.fontWeights.regular,
  };

  const fontSizes = {
    verticalTitle: `${theme.fontSizes.small}px`,
    yAxisTick: `${theme.fontSizes.xsmall}px`,
    totalText: `${theme.fontSizes.xsmall}px`,
    xAxisTick: `${theme.fontSizes.xsmall}px`,
  };

  const lineHeights = {
    xAxisTick: `${theme.lineHeights.xsmall}px`,
    verticalTitle: `${theme.lineHeights.small}px`,
    yAxisTick: `${theme.lineHeights.xsmall}px`,
  };

  const boxShadows = {
    barDropShadow: '1px 1px 4px rgb(0 0 0 / 0.3)',
    tooltip: '0 0 10px 0 rgba(0, 0, 0, 0.2)',
  };

  const borderWidth = {
    totalRect: theme.borderWidths.base,
  };

  return {
    colors,
    radii,
    space,
    fontWeights,
    lineHeights,
    fontSizes,
    sizes,
    boxShadows,
    borderWidth,
  };
};

type HorizontalBarChartTheme = ReturnType<typeof getHorizontalBarChart>;

export { getHorizontalBarChart };
export type { HorizontalBarChartTheme };
