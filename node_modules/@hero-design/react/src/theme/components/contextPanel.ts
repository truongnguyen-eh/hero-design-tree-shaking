import type { GlobalTheme } from '../global';

const getContextPanelTheme = (theme: GlobalTheme) => {
  const colors = {
    overlayBackground: `${theme.colors.defaultDarkBackground}80`,
    scrollbarThumbBackground: `${theme.colors.neutralDarkBackground}b3`,
    contextPanelBackground: `${theme.colors.defaultLightBackground}`,
  };

  const spaces = {
    contextPanelPadding: `${theme.space.medium}px ${theme.space.large}px 0`,
    contextPanelHeaderMarginBottom: `${theme.space.medium}px`,
    contextPanelBodyMarginTop: `${theme.space.xsmall}px`,
    contextPanelBodyMarginBottom: `${theme.space.xsmall}px`,
    contextPanelFooterPadding: `${theme.space.small}px 0 ${theme.space.large}px`,
    scrollbarTrackMargin: `${theme.space.xsmall}px 0`,
  };

  const sizes = {
    scrollbarWidth: '2px',
  };

  const fontSizes = {
    header: `${theme.fontSizes.large}px`,
    body: `${theme.fontSizes.medium}px`,
  };

  const fontWeights = {
    header: theme.fontWeights.semiBold,
    body: theme.fontWeights.regular,
  };

  const lineHeights = {
    header: `${theme.lineHeights.large}px`,
    body: `${theme.lineHeights.medium}px`,
  };

  const borderRadius = {
    contextPanel: `${theme.radii.large}px 0 0 ${theme.radii.large}px`,
    scrollbar: `${theme.radii.large}`,
  };

  return {
    colors,
    spaces,
    borderRadius,
    fontSizes,
    fontWeights,
    lineHeights,
    sizes,
  };
};

type ContextPanelTheme = ReturnType<typeof getContextPanelTheme>;

export type { ContextPanelTheme };

export { getContextPanelTheme };
