import type { GlobalTheme } from '../global';

const getTabsTheme = (theme: GlobalTheme) => {
  const space = {
    padding: `${theme.space.small}px ${theme.space.medium}px`,
    marginRight: `${theme.space.xxsmall}px`,
    panelPadding: `${theme.space.medium}px`,
    subTabPanelPadding: {
      medium: `${theme.space.medium}px`,
      small: `${theme.space.small}px`,
    },
    iconMarginRight: `${theme.space.small}px`,
    iconMarginLeft: `${theme.space.small}px`,
    subPadding: {
      medium: `${theme.space.small}px ${theme.space.medium}px`,
      small: `0px ${theme.space.small}px`,
    },
  };

  const sizes = {
    indicatorHeight: `${theme.sizes.xxsmall / 2}px`,
    activeTabIndicatorHeight: `${theme.sizes.xxsmall}px`,
    maxWidth: `${5 * theme.sizes.xxxlarge}px`,
    moreTabMaxHeight: '300px',
  };

  const colors = {
    background: theme.colors.defaultBackground,
    activeBackground: theme.colors.defaultLightBackground,
    border: theme.colors.defaultBorder,
    focusBorder: theme.colors.primary,
    text: theme.colors.text,
    panelText: theme.colors.text,
    panelBackground: theme.colors.defaultLightBackground,
    hoverText: theme.colors.primary,
    focusText: theme.colors.primary,
    activeText: theme.colors.primary,
    disabledText: theme.colors.subduedText,
    subFocusText: theme.colors.activePrimary,
  };

  const radii = {
    default: `${theme.radii.base}px ${theme.radii.base}px 0 0`,
    panel: `0 0 ${theme.radii.base}px ${theme.radii.base}px`,
  };

  const fontSizes = {
    subTabTitles: {
      medium: `${theme.fontSizes.medium}px`,
      small: `${theme.fontSizes.small}px`,
    },
    panel: `${theme.fontSizes.medium}px`,
    default: `${theme.fontSizes.medium}px`,
  };

  const lineHeights = {
    subTabTitles: {
      medium: `${theme.lineHeights.medium}px`,
      small: `${theme.lineHeights.small}px`,
    },
    panel: `${theme.lineHeights.medium}px`,
    default: `${theme.lineHeights.medium}px`,
  };

  const fontWeights = {
    subTabTitle: theme.fontWeights.regular,
    panel: theme.fontWeights.regular,
    default: theme.fontWeights.regular,
  };

  const borderWidths = {
    default: `${theme.borderWidths.base}px`,
  };

  return {
    space,
    sizes,
    colors,
    radii,
    fontSizes,
    lineHeights,
    fontWeights,
    borderWidths,
  };
};

type TabsTheme = ReturnType<typeof getTabsTheme>;

export { getTabsTheme };
export type { TabsTheme };
