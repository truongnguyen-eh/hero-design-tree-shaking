import type { GlobalTheme } from '../global';

const getTagTheme = (theme: GlobalTheme) => {
  const space = {
    smallPadding: `${theme.space.xxsmall}px ${theme.space.small}px`,
    mediumPadding: `${theme.space.xsmall}px ${theme.space.small}px`,
    largePadding: `${theme.space.xsmall}px ${theme.space.small}px`,
    closeBtnPadding: `0 0 0 ${theme.space.small}px`,
  };

  const colors = {
    defaultText: theme.colors.text,
    defaultBorder: theme.colors.neutralDarkBackground,
    defaultBackground: theme.colors.defaultBackground,
    primary: theme.colors.primary,
    primaryBackground: theme.colors.primaryLightBackground,
    warning: theme.colors.warning,
    warningBackground: theme.colors.warningBackground,
    danger: theme.colors.danger,
    dangerBackground: theme.colors.dangerBackground,
    success: theme.colors.success,
    successBackground: theme.colors.successBackground,
    error: theme.colors.error,
    errorBackground: theme.colors.errorBackground,
    archived: theme.colors.subduedText,
    archivedBackground: theme.colors.neutralLightBackground,
    basicCloseBtn: theme.colors.subduedText,
    closeBtn: theme.colors.lightText,
    hoverBasicCloseBtn: theme.colors.disabledText,
    hoverPrimaryCloseBtn: theme.colors.hoverPrimary,
    hoverWarningCloseBtn: theme.colors.hoverWarning,
    hoverDangerCloseBtn: theme.colors.hoverDanger,
    hoverSuccessCloseBtn: theme.colors.hoverSuccess,
    hoverErrorCloseBtn: theme.colors.hoverError,
    activePrimaryCloseBtn: theme.colors.activePrimary,
    activeWarningCloseBtn: theme.colors.activeWarning,
    activeDangerCloseBtn: theme.colors.activeDanger,
    activeSuccessCloseBtn: theme.colors.activeSuccess,
    activeErrorCloseBtn: theme.colors.activeError,
  };

  const borderWidths = {
    default: `${theme.borderWidths.base}px`,
  };

  const radii = {
    default: `${theme.radii.base}px`,
  };

  const fontSizes = {
    small: `${theme.fontSizes.xsmall}px`,
    medium: `${theme.fontSizes.small}px`,
    large: `${theme.fontSizes.medium}px`,
    closeBtn: `${theme.fontSizes.xsmall}px`,
  };

  const fontWeights = {
    default: theme.fontWeights.semiBold,
  };

  return { space, colors, borderWidths, radii, fontSizes, fontWeights };
};

type TagTheme = ReturnType<typeof getTagTheme>;

export { getTagTheme };
export type { TagTheme };
