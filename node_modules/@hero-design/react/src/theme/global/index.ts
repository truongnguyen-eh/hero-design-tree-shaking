import palette from '@hero-design/colors';

import { getSizes } from './sizes';
import { getSpace } from './space';
import { getFontSizes, fontWeights, getLineHeights } from './typography';
import { getBorderWidths, getRadii } from './borders';
import { getShadows } from './shadows';
import {
  heroSystemPalette,
  omopSystemPalette,
  eBensSystemPalette,
  jobsSystemPalette,
} from './colors';
import { scale as defaultScale } from './scales';
import type { Sizes } from './sizes';
import type { Space } from './space';
import type { FontSizes, FontWeights, LineHeights } from './typography';
import type { BorderWidths, Radii } from './borders';
import type { Shadows } from './shadows';
import type { SystemPalette, Palette } from './colors';
import type { Scale } from './scales';
import { getBreakpoints, Breakpoints } from './breakpoints';

type GlobalTheme = {
  borderWidths: BorderWidths;
  breakpoints: Breakpoints;
  colors: SystemPalette & { palette: Palette };
  fontSizes: FontSizes;
  fontWeights: FontWeights;
  lineHeights: LineHeights;
  radii: Radii;
  shadows: Shadows;
  sizes: Sizes;
  space: Space;
};

const getGlobalTheme = (
  scale: Scale,
  systemPalette: SystemPalette
): GlobalTheme => {
  const borderWidths = getBorderWidths(scale.borderWidth);

  const fontSizes = getFontSizes(scale.fontSize);
  const lineHeights = getLineHeights(fontSizes);

  const radii = getRadii(scale.radius);
  const sizes = getSizes(scale.size);
  const space = getSpace(scale.space);
  const shadows = getShadows(systemPalette);
  const breakpoints = getBreakpoints(scale.breakpoints);

  return {
    borderWidths,
    breakpoints,
    colors: {
      // NOTE: Do NOT allow modify palette, it is fixed from @hero-design/colors
      palette,
      ...systemPalette,
    },
    fontSizes,
    fontWeights,
    lineHeights,
    radii,
    shadows,
    sizes,
    space,
  };
};

export {
  defaultScale,
  heroSystemPalette,
  omopSystemPalette,
  eBensSystemPalette,
  jobsSystemPalette,
  getGlobalTheme,
};
export type { GlobalTheme };
