import { fromUndefinedable } from './Option';
import { pipe } from './function';

export const map =
  <A, B>(f: (a: A) => B) =>
  (arr: Array<A>) =>
    arr.map(f);

export const filter =
  <A>(f: (a: A) => boolean) =>
  (arr: Array<A>) =>
    arr.filter(f);

export const reject =
  <A>(f: (a: A) => boolean) =>
  (arr: Array<A>) =>
    arr.filter((a) => !f(a));

export const find =
  <A>(f: (a: A) => boolean) =>
  (arr: Array<A>) =>
    pipe(arr, (array) => array.find(f), fromUndefinedable);

export const reduce =
  <A, B>(reduceFn: (acc: B, cur: A, index: number) => B, init: B) =>
  (arr: Array<A>) =>
    arr.reduce(reduceFn, init);

export const flat = <A>(arr: Array<Array<A>>) =>
  reduce((acc: Array<A>, current: Array<A>) => [...acc, ...current], [])(arr);
