export interface Left<L> {
    readonly left: L;
    readonly tag: 'Left';
}
export interface Right<R> {
    readonly right: R;
    readonly tag: 'Right';
}
export declare type Either<L, R> = Left<L> | Right<R>;
export declare const isLeft: <L, R>(ml: Either<L, R>) => ml is Left<L>;
export declare const isRight: <L, R>(mr: Either<L, R>) => mr is Right<R>;
export declare const left: <L = never, R = never>(l: L) => Either<L, R>;
export declare const right: <L = never, R = never>(r: R) => Either<L, R>;
export declare const match: <L, R, A>(onLeft: (l: L) => A, onRight: (r: R) => A) => (ml: Either<L, R>) => A;
