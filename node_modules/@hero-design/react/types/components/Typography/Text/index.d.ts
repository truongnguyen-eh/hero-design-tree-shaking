import type { ReactElement, ReactNode } from 'react';
import type { CommonProps } from '../../common';
export interface TextProps extends CommonProps {
    /**
     * Text content.
     */
    children: ReactNode;
    /**
     * Text's font-size.
     */
    fontSize?: 10 | 12 | 14 | 16 | 18;
    /**
     * Text's font-weight.
     */
    fontWeight?: 'regular' | 'light' | 'semi-bold' | 'bold';
    /**
     * Which form element the text is bound to. This only gets effect when tagName is label.
     */
    htmlFor?: string;
    /**
     * Visual intent color to apply to text.
     */
    intent?: 'main' | 'subdued' | 'body' | 'disabled' | 'primary' | 'success' | 'danger' | 'warning' | 'error' | 'white';
    /**
     * HTML tag name to use for rendered element.
     */
    tagName?: 'div' | 'p' | 'span' | 'label';
}
declare const Text: ({ children, intent, fontSize, fontWeight, tagName, htmlFor, id, className, style, sx, "data-test-id": dataTestId, }: TextProps) => ReactElement;
export default Text;
