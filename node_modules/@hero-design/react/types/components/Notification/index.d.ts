import type { ReactElement } from 'react';
import type { IconName } from '../Icon';
import type { CommonProps } from '../common';
declare type NotificationIntent = 'success' | 'info' | 'warning' | 'danger' | 'error';
export interface NotificationProps extends CommonProps {
    /**
     * Notification content.
     */
    content?: string | ReactElement;
    /**
     * Icon name or a react element as custom icon.
     * - undefined: use default icon according to Notification intent.
     * - null: no icon at all.
     * - IconName: an icon identifier from hero-design icon list.
     * - ReactElement: Custom icon by your own.
     */
    icon?: null | IconName | ReactElement;
    /**
     * Visual intent color to apply to notification icon.
     */
    intent?: NotificationIntent;
    /**
     * Closing callback. When onClose is available, an `x` button will be rendered on the right side of notification. The callback will be called when user clicks on `x` button.
     */
    onClose?: () => void;
    /**
     * Notification title.
     */
    title: string | ReactElement;
}
declare const Notification: ({ intent, title, content, icon, onClose, id, className, style, sx, "data-test-id": dataTestId, }: NotificationProps) => ReactElement;
export default Notification;
