import React from 'react';
import type { ReactElement } from 'react';
import type { FilterValues } from './types';
import type { IconName } from '../../Icon';
export declare type FilterProps<T extends FilterValues, K extends keyof T> = {
    children: ({ value, onChange, }: {
        onChange: (v: T[K]) => void;
        value: T[K];
    }) => ReactElement;
    clearable?: boolean;
    defaultValue?: T[K];
    filterKey: K;
    formatValue?: (v: T[K]) => string;
    icon?: IconName;
    label?: string;
    noCaret?: boolean;
};
declare const Filter: {
    <T extends FilterValues, K extends keyof T>({ label, icon, noCaret, filterKey, children, defaultValue, formatValue, clearable, }: FilterProps<T, K>): React.JSX.Element;
    displayName: string;
};
export default Filter;
