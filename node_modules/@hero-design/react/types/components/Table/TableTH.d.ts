import React from 'react';
import type { ReactNode } from 'react';
import type { Breakpoint } from '../../utils/responsiveBreakpoints';
interface SortingProps {
    sortable?: boolean;
    sorted?: boolean;
    sortedDesc?: boolean;
    toggleSortBy?: (descending?: boolean, multi?: boolean) => void;
}
interface TableTHProps {
    align?: 'left' | 'right' | 'center';
    children: ReactNode;
    'data-test-id'?: string;
    displayAtBreakpoint?: Breakpoint;
    filterable: boolean;
    hasFilterInput: boolean;
    renderFilter: (props: {
        onClose: () => void;
    }) => ReactNode;
    sortingProps: SortingProps;
    sticky: boolean;
    themeHorizontallySticky: boolean;
    themeLeft?: number;
    themeShowDivider: boolean;
    themeWidth?: string;
    hasBorderRight?: boolean;
}
declare const TableTH: React.ForwardRefExoticComponent<TableTHProps & React.RefAttributes<HTMLTableHeaderCellElement>>;
export default TableTH;
