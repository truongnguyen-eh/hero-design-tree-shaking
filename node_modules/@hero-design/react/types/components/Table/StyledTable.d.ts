/// <reference types="react" />
declare const StyledTH: import("styled-components").StyledComponent<"th", import("styled-components").DefaultTheme, {
    themeDisplayAtBreakpoint?: "small" | "medium" | "large" | "xlarge" | undefined;
    themeHorizontallySticky: boolean;
    themeLeft?: number | undefined;
    themeShowDivider: boolean;
    themeSticky: boolean;
    themeWidth?: string | number | undefined;
    themeHasBorderRight?: boolean | undefined;
}, never>;
declare const StyledInnerTH: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    themeAlign: 'left' | 'right' | 'center';
}, never>;
declare const StyledTD: import("styled-components").StyledComponent<"td", import("styled-components").DefaultTheme, {
    themeAlign?: "left" | "right" | undefined;
    themeDisplayAtBreakpoint?: "small" | "medium" | "large" | "xlarge" | undefined;
    themeHorizontallySticky: boolean;
    themeLeft?: number | undefined;
    themeShowDivider: boolean;
    themeWidth?: string | undefined;
}, never>;
declare const StyledTHead: import("styled-components").StyledComponent<"thead", import("styled-components").DefaultTheme, {}, never>;
declare const StyledTBody: import("styled-components").StyledComponent<"tbody", import("styled-components").DefaultTheme, {}, never>;
declare const StyledTable: import("styled-components").StyledComponent<"table", import("styled-components").DefaultTheme, {
    themeFixedLayout: boolean;
}, never>;
declare const StyledTableWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    themeSticky: boolean;
}, never>;
declare const StyledSortingArrows: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledExpandableIcon: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledPaginationWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledItemsPerPageSelect: import("styled-components").StyledComponent<(<V extends string | number, T extends import("../Select/types").BaseOption<V>>({ options, value, onBlur, onChange, onFocus, query, onQueryChange, onKeyDown, onKeyUp, optionRenderer, optionPredicate, selectedOptionRenderer, noResults, disabled, size, invalid, placeholder, prefix, onScrollListToBottom, loading, name, onCreateNewOption, id, "aria-labelledby": ariaLabelledBy, className, style, sx, autoComplete, optionMenuStyle, clearable, "data-test-id": dataTestId, inputRef, }: import("../Select/SingleSelect").SelectProps<V, T>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>), import("styled-components").DefaultTheme, {}, never>;
declare const StyledFilterWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledFilterTargetWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledEmptyTableContent: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export { StyledTH, StyledInnerTH, StyledTD, StyledTHead, StyledTBody, StyledSortingArrows, StyledExpandableIcon, StyledPaginationWrapper, StyledItemsPerPageSelect, StyledFilterWrapper, StyledFilterTargetWrapper, StyledTableWrapper, StyledEmptyTableContent, };
export default StyledTable;
