import React from 'react';
import type { ReactElement } from 'react';
import type { WeekState, DayState } from './StyledCalendar';
declare type SelectMonthAndYearProps = {
    currentDate?: Date;
    date: Date;
    month: number;
    onChangeMonth: (month?: string | number) => void;
    onChangeYear: (year?: string | number) => void;
    setDate: (date: Date) => void;
    year: number;
};
export declare const SelectMonthAndYear: ({ currentDate, year, month, onChangeMonth, onChangeYear, date, setDate, }: SelectMonthAndYearProps) => ReactElement;
export declare const FirstRowOfWeekCalendar: ({ weekStartsOn, }: {
    weekStartsOn?: 0 | 2 | 1 | 3 | 4 | 5 | 6 | undefined;
}) => React.JSX.Element;
declare type WeekComponentProps = {
    firstDateState: WeekState;
    onMouseOver: () => void;
    showedWeekNumber: number;
};
export declare const WeekComponent: ({ onMouseOver, firstDateState, showedWeekNumber, }: WeekComponentProps) => ReactElement;
declare type DayComponentProps = {
    dateState: DayState;
    day: number;
    onMouseOver: () => void;
};
export declare const DayComponent: ({ day, dateState, onMouseOver, }: DayComponentProps) => ReactElement;
export interface WeekCalendarProps {
    onSelectFirstDateOfWeek?: (date: Date) => void;
    selectedFirstDateOfWeek?: Date;
    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
}
declare const WeekCalendar: ({ onSelectFirstDateOfWeek, selectedFirstDateOfWeek, weekStartsOn, }: WeekCalendarProps) => ReactElement;
export default WeekCalendar;
