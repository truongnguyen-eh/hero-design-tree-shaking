import type { ReactElement } from 'react';
import type { CommonProps } from '../common';
export interface Option<T extends string | number> {
    disabled?: boolean;
    text: string | ReactElement;
    value: T;
}
export interface CheckboxButtonGroupProps<T extends string | number> extends CommonProps {
    /**
     * Checkbox group name, used for form submission.
     */
    name?: string;
    /**
     * Change event handler.
     */
    onChange: (value: T[]) => void;
    /**
     * An array of checkbox options to be selected. Shape of an option:
     * {
     *   disabled?: boolean;
     *   text: string | ReactElement;
     *   value: T;
     * }
     */
    options: Option<T>[];
    /**
     * The size of the checkbox.
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * Selected value. T is a generic type.
     */
    value: T[];
}
declare const CheckboxButtonGroup: <T extends string | number>({ name, value, options, onChange, size, id, className, style, sx, "data-test-id": dataTestId, }: CheckboxButtonGroupProps<T>) => ReactElement;
export default CheckboxButtonGroup;
