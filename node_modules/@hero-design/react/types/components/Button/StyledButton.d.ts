import type { DefaultTheme } from 'styled-components';
declare type Intent = 'primary' | 'danger' | 'success' | 'warning' | 'error';
declare type ThemeVariant = 'basic' | 'basic-transparent' | 'filled-primary' | 'filled-danger' | 'filled-success' | 'filled-warning' | 'filled-error' | 'outlined-primary' | 'outlined-danger' | 'outlined-success' | 'outlined-warning' | 'outlined-error' | 'text-primary' | 'text-danger' | 'text-success' | 'text-warning' | 'text-error' | 'filled-reversed-primary' | 'filled-reversed-danger' | 'filled-reversed-success' | 'filled-reversed-warning' | 'filled-reversed-error' | 'inline-text-primary' | 'inline-text-danger' | 'inline-text-success' | 'inline-text-warning' | 'inline-text-error';
declare const StyledButton: import("styled-components").StyledComponent<"button", DefaultTheme, {
    loading?: boolean | undefined;
    themeSize: 'small' | 'medium' | 'large';
    themeVariant: ThemeVariant;
}, never>;
declare const IconWrapper: import("styled-components").StyledComponent<"span", DefaultTheme, {
    themePosition: 'left' | 'right';
}, never>;
declare const StyledIconButton: import("styled-components").StyledComponent<"button", DefaultTheme, {
    themeSize: 'small' | 'medium' | 'large';
}, never>;
export { IconWrapper, StyledButton, StyledIconButton };
export type { Intent, ThemeVariant };
