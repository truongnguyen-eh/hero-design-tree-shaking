import { ReactNode } from 'react';
import type { ReactElement } from 'react';
import type { CommonProps } from '../common';
declare type Placement = 'top' | 'bottom' | 'right' | 'left';
export interface TooltipProps extends CommonProps {
    /**
     * Content of tooltip.
     */
    content: ReactNode;
    /**
     * The number of milliseconds to wait before showing the tooltip.
     */
    delay?: number;
    /**
     * Whether the tooltip content can be interactive, allowing you to hover over and click inside it.
     */
    interactive?: boolean;
    /**
     * Milliseconds for interaction timeout, this only takes effect when `interactive` is enabled.
     */
    interactiveTimeout?: number;
    /**
     * Open state of tooltip. Use this if you wish to control the tooltip state. Also, the hover interaction and interative tooltip will be disabled when this prop is set.
     */
    open?: boolean;
    /**
     * Position of tooltip.
     */
    placement?: Placement;
    /**
     The target where tooltip is relatively placed to.
    */
    target: string | ReactElement;
    /**
     Whether or not to show Tooltip when hovering the target.
    */
    visible?: boolean;
    /**
     * If `true`, the tooltip element will be rendered using Portal. Otherwise, it will be rendered directly to the current tree
     */
    withPortal?: boolean;
    /**
     * Theme status styles.
     */
    variant?: 'dark' | 'light';
}
declare const Tooltip: ({ content, placement: placementFromProps, target, interactive, interactiveTimeout, id, className, style, withPortal, sx, "data-test-id": dataTestId, open: controlledOpen, visible, variant, delay, }: TooltipProps) => ReactElement;
export default Tooltip;
