import React from 'react';
import { CommonProps } from '../../common';
import { LegendConfig, NavigationConfig, Series, TickConfig, XAxisConfig, YAxisConfig, BarConfig, MatchedSegment, StyleConfig } from '../type';
declare type DataValue = number | undefined;
export interface BarChartProps extends CommonProps {
    /**
     * Data of the chart.
     */
    data: Array<Series<Array<DataValue>>>;
    /**
     * X axis config.
     */
    xAxisConfig?: Omit<XAxisConfig, 'labels'> & {
        tick?: TickConfig;
    };
    /**
     * Y axis config.
     */
    yAxisConfig?: Omit<YAxisConfig, 'maxValue'>;
    /**
     * Legend config.
     */
    legendConfig?: LegendConfig;
    /**
     * Bar section config.
     */
    barConfig?: BarConfig<DataValue>;
    /**
     * Navigation button config.
     */
    navigationConfig?: NavigationConfig;
    /**
     * Matched pattern to highlight the bars.
     */
    highlightedItems?: MatchedSegment;
    /**
     * styleConfig use to custom the style of the chart.
     * * styleConfig must be an object:
     *    * color?: use to custom the legend colors.
     */
    styleConfig?: StyleConfig;
    /**
     * Tooltip renderer.
     */
    tooltipRenderer?: (props: {
        label?: string;
        value?: DataValue;
        legendColor?: string;
        yAxisLabel?: string;
    }) => React.ReactNode;
}
declare const BarChart: ({ data, xAxisConfig, yAxisConfig, legendConfig, navigationConfig, barConfig, "data-test-id": dataTestId, style, sx, id, className, highlightedItems, styleConfig, tooltipRenderer, }: BarChartProps) => React.JSX.Element;
export default BarChart;
