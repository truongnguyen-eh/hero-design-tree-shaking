/// <reference types="react" />
import type { ColumnChartProps } from './ColumnChart';
import type { BarChartProps } from './BarChart';
import type { HorizontalBarChartProps } from './HorizontalBar';
declare const Chart: {
    Column: ({ data, xAxisConfig, yAxisConfig, legendConfig, barConfig, "data-test-id": dataTestId, navigationConfig, style, className, id, sx, highlightedItems, tooltipRenderer: _tooltipRenderer, styleConfig, }: ColumnChartProps) => import("react").JSX.Element;
    Pie: ({ data: originalData, size, sx, style, "data-test-id": dataTestId, className, legendConfig, title, id, onClick, alwaysShowTotal, highlightedItems, totalText, totalFormatter, styleConfig, centralContentRenderer, itemConfig, }: import("./PieChart").PieChartProps) => import("react").JSX.Element;
    Bar: ({ data, xAxisConfig, yAxisConfig, legendConfig, navigationConfig, barConfig, "data-test-id": dataTestId, style, sx, id, className, highlightedItems, styleConfig, tooltipRenderer, }: BarChartProps) => import("react").JSX.Element;
    MultiplePie: (props: import("./MultiplePieChart").MultiplePieChartProps) => import("react").JSX.Element;
    HorizontalBar: ({ data, xAxisConfig, yAxisConfig, legendConfig, navigationConfig, barConfig, "data-test-id": dataTestId, style, sx, id, className, highlightedItems, styleConfig, }: HorizontalBarChartProps) => import("react").JSX.Element;
    Line: ({ data, xAxisConfig, yAxisConfig, legendConfig, "data-test-id": dataTestId, navigationConfig, style, className, id, sx, variant, styleConfig, }: import("./LineChart").LineChartProps) => import("react").JSX.Element;
};
export type { ColumnChartProps, BarChartProps, HorizontalBarChartProps };
export default Chart;
