/// <reference types="react" />
declare const StyledBarChartContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledLegendContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledTooltipContentWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const StyledNavigateButton: import("styled-components").StyledComponent<({ icon, onClick, onBlur, onMouseDown, onMouseEnter, onMouseLeave, onMouseUp, intent, size, disabled, type, id, className, style, sx, "data-test-id": dataTestId, ...ariaProps }: import("../../Button/IconButton").IconButtonProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {}, never>;
declare const StyledNavigateButtonWrapper: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {
    themeTop: string | number;
    themePosition: 'right' | 'left';
    themeIsHasTitle: boolean;
    themeLeft?: number | undefined;
}, never>;
export { StyledBarChartContainer, StyledLegendContainer, StyledTooltipContentWrapper, StyledNavigateButton, StyledNavigateButtonWrapper, };
