import { DataValue } from './type';
export declare const usePrevious: <T>(value: T) => T | undefined;
export declare const difference: <T>(array1: T[], array2: T[]) => T[];
export declare const clamp: (val: number, min: number, max: number) => number;
export declare const isNull: (value: DataValue) => value is number;
export declare const totalOfMaxValuesFromEachRows: (data: {
    data: DataValue[];
}[]) => number;
/**
 * this function to check is array 1 contain array 2 for primitive type
 */
export declare const contains: <Data>(arr1: Data[], arr2: Data[]) => boolean;
export declare const filterElementHasNoColor: <D extends object>(data: (D & {
    color?: string | undefined;
})[]) => (D & {
    color: string;
})[];
export declare const getParentElement: (ele: HTMLElement | null | undefined) => HTMLElement | null;
