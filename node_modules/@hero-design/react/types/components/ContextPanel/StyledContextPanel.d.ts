/// <reference types="react" />
import { DefaultTheme } from 'styled-components';
declare const StyledContextPanelContainer: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {}, never>;
declare const StyledContextPanelOverlay: import("styled-components").StyledComponent<"div", DefaultTheme, {}, never>;
declare const StyledContextPanel: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {
    themeOpen: boolean;
    themeHasFooter: boolean;
}, never>;
declare const StyledContextPanelHeader: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {}, never>;
declare const StyledContextPanelBody: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {
    themeHasFooter: boolean;
    themeHasHeader: boolean;
}, never>;
declare const StyledContextPanelFooter: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {}, never>;
declare const StyledContextPanelCloseIcon: import("styled-components").StyledComponent<({ icon, onClick, onBlur, onMouseDown, onMouseEnter, onMouseLeave, onMouseUp, intent, size, disabled, type, id, className, style, sx, "data-test-id": dataTestId, ...ariaProps }: import("../Button/IconButton").IconButtonProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, DefaultTheme, {}, never>;
export { StyledContextPanelOverlay, StyledContextPanel, StyledContextPanelContainer, StyledContextPanelHeader, StyledContextPanelBody, StyledContextPanelFooter, StyledContextPanelCloseIcon, };
