/// <reference types="react" />
declare const GroupWrapper: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {}, never>;
declare const GroupFilterWrapper: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {}, never>;
declare const DropdownContentWrapper: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {}, never>;
declare const WideDropdownContentWrapper: import("styled-components").StyledComponent<({ bgColor, borderColor, borderRadius, borderStyle, borderWidth, boxShadow, children, color, fontSize, fontWeight, lineHeight, m, mb, ml, mr, mt, p, pb, pl, pr, pt, sx, className, id, style, "data-test-id": dataTestId, onClick, tagName, ...ariaProps }: import("../../Box").BoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, import("styled-components").DefaultTheme, {
    themeSize: 'large' | 'xlarge';
}, never>;
export { GroupWrapper, DropdownContentWrapper, GroupFilterWrapper, WideDropdownContentWrapper, };
