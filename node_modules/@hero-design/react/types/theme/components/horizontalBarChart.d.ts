import type { GlobalTheme } from '../global';
declare const getHorizontalBarChart: (theme: GlobalTheme) => {
    colors: {
        yAxisTickColor: string;
        xAxisTickColor: string;
        gridLineBackgroundColor: string;
        verticalTitleFillColor: string;
        totalBackgroundColor: string;
        tooltipBackgroundColor: string;
    };
    radii: {
        tooltip: number;
        tooltipArrow: number;
        bar: {
            large: number;
            medium: number;
            inactive: number;
        };
        totalRect: number;
    };
    space: {
        tooltipChildMargin: number;
        tooltipPadding: number;
        legendContainerMarginTop: number;
        legendContainerChildMarginBottom: number;
        horizontalBarChartMarginTop: number;
        legendBoxGap: number;
        horizontalBarChartMarginRight: number;
        horizontalBarChartMarginBottom: number;
        horizontalBarChartMarginLeft: number;
        horizontalBarChartMarginLeftWithNavigation: number;
        yAxisTransformHorizontal: number;
        xAxisTransform: number;
        barHoverTransform: {
            large: number;
            medium: number;
        };
        horizontalBarMarginLeft: number;
        tooltipTop: number;
        moreTooltipPadding: number;
        navigateLeftPosition: number;
        navigateLeftPositionHasTitle: number;
        verticalTitleY: number;
        navigateRightPosition: number;
        gridChartMarginTop: number;
        horizontalBarMarginTop: number;
        totalSvgHorizontalPadding: number;
    };
    fontWeights: {
        xAxisTick: number;
        verticalTitle: number;
        totalText: number;
        yAxisTick: number;
    };
    lineHeights: {
        xAxisTick: string;
        verticalTitle: string;
        yAxisTick: string;
    };
    fontSizes: {
        verticalTitle: string;
        yAxisTick: string;
        totalText: string;
        xAxisTick: string;
    };
    sizes: {
        tooltipArrow: number;
        barHeight: {
            large: number;
            medium: number;
            inactive: number;
        };
        totalSvgHeight: number;
        navigationButton: number;
        totalLetterWidth: number;
    };
    boxShadows: {
        barDropShadow: string;
        tooltip: string;
    };
    borderWidth: {
        totalRect: number;
    };
};
declare type HorizontalBarChartTheme = ReturnType<typeof getHorizontalBarChart>;
export { getHorizontalBarChart };
export type { HorizontalBarChartTheme };
